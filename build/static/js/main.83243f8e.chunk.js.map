{"version":3,"sources":["Assets/Images/artihaus.svg","Assets/Images/close-icon.svg","Assets/Images/edit-icon.svg","Assets/Images/email-icon.svg","Assets/Images/chat-icon.svg","Assets/Images/contact-icon.svg","Assets/Images/agenda-icon.svg","Assets/Images/notes-icon.svg","Assets/Images/todo-icon.svg","Assets/Images/project-icon.svg","Assets/Images/expense-icon.svg","Assets/Images/earning-icon.svg","Assets/Images/invoice-icon.svg","Assets/Images/map-icon.svg","Artihaus/Pages/ArtihausDashboard/ArtihausDashboard.js","Components/Header/Header.js","Components/SubHeader/SubHeader.js","Utils/Api/api.js","Utils/Server/Clients.js","Utils/Server/Projects.js","Utils/Server/Expenses.js","Utils/ContextApi/MyProvider.js","Components/GeneralFunctions/Moment.js","Components/GeneralFunctions/CapitalizeFirst.js","Components/Buttons/AddProjectButton.js","Components/Projects/AddProjectCard.js","Components/Buttons/Close.js","Components/Buttons/UpdateProjectButton.js","Components/Buttons/Delete.js","Components/Projects/EditProjectModal.js","Components/Projects/Projects.js","Components/GeneralFunctions/Status.js","Components/Expenses/EditExpenseModal.js","Components/Expenses/Expenses.js","AdminPortal/Pages/AdminPortalDashboard/AdminPortalDashboard.js","Artihaus/Pages/_404Page/_404Page.js","routes/route.js","App.js","index.js"],"names":["module","exports","ArtihausDashboard","Component","AdminPortalDashboardHeader","className","to","alt","src","require","SubHeader","baseUrl","ClientsApi","create","data","console","log","axios","post","read","update","remove","ProjectsApi","get","read_false","readById","readAll","React","createContext","Provider","Consumer","MyProvider","state","newProject","name","address","address2","city_code","client_id","user_id","status","started","updateProject","isModalDisplaying","a","newState","then","projects","setState","clients","ExpensesApi","expenses","value","this","updateModalDisplay","project","updateProjectValue","key","finished","newProjectCreate","addNewProjectToState","unshift","clearNewProject","props","children","DateFormat","format","Moment","CapitalizeFirst","capitalize","split","map","s","charAt","toUpperCase","substring","join","AddProjectButton","context","toLowerCase","forEach","client","_id","ProjectApi","res","catch","err","type","onClick","handleSubmit","AddProjectCard","onChange","e","target","placeholder","Close","Delete","handleUpdate","index","handleDelete","EditProjectModal","htmlFor","UpdateProjectButton","Projects","length","client_name","handleClientId","Status","handleProjects","Expenses","expense","category","subcategory","amount","createdBy","createdAt","EditExpenseModal","handleExpenses","AdminPortalDashboard","display","menu","_404Page","MainContainer","exact","path","component","Artihaus","AdminPortal","AdminPortalProjects","App","ReactDOM","render","document","getElementById"],"mappings":"wNAAAA,EAAOC,QAAU,IAA0B,sC,2GCA3CD,EAAOC,QAAU,IAA0B,wC,oDCA3CD,EAAOC,QAAU,IAA0B,uC,kCCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,sJCW5BC,E,iLANP,OACI,mE,GAJoBC,aC0BjBC,G,uLApBP,OACQ,yBAAKC,UAAU,gBACX,kBAAC,IAAD,CAAMC,GAAG,gBAAgBC,IAAI,YAAYF,UAAU,0BAAyB,yBAAKG,IAAKC,EAAQ,IAAqCF,IAAI,eAEvI,wBAAIF,UAAU,qBACV,4BACI,kBAAC,IAAD,CAAMC,GAAG,gBAAgBC,IAAI,aAA7B,SAEJ,4BACI,kBAAC,IAAD,CAAMD,GAAG,wBAAwBC,IAAI,aAArC,YAEJ,4BACI,kBAAC,IAAD,CAAMD,GAAG,sBAAsBC,IAAI,aAAnC,mB,GAfaJ,cCW1BO,G,uLATP,OACI,yBAAKL,UAAU,mBACX,yBAAKA,UAAU,8BAAf,aACA,yBAAKA,UAAU,8BAAf,mB,GANQF,c,0DCDXQ,EAAU,wBCoBRC,EApBI,CAEjBC,OAAQ,SAACC,GAEP,OADAC,QAAQC,IAAIF,GACLG,IAAMC,KAAN,UAAcP,GAAd,ODFW,GCEX,mBAAiDG,IAG1DK,KAAM,SAACL,GACL,OAAOG,IAAMC,KAAN,UAAcP,GAAd,ODNW,GCMX,iBAA+CG,IAGxDM,OAAQ,SAACN,GACP,OAAOG,IAAMC,KAAN,UAAcP,GAAd,ODVW,GCUX,mBAAiDG,IAG1DO,OAAQ,SAACP,GACP,OAAOG,IAAMC,KAAN,UAAcP,GAAd,ODdW,GCcX,mBAAiDG,KCW7CQ,EA3BK,CAElBT,OAAQ,SAACC,GACP,OAAOG,IAAMC,KAAN,UAAcP,GAAd,OFDW,GECX,oBAAkDG,IAG3DK,KAAM,SAACL,GACL,OAAOG,IAAMM,IAAN,UAAaZ,GAAb,OFLW,GEKX,kBAA+CG,IAGxDU,WAAY,SAACV,GACX,OAAOG,IAAMM,IAAN,UAAaZ,GAAb,OFTW,GESX,wBAAqDG,IAG9DW,SAAU,SAACX,GACT,OAAOG,IAAMC,KAAN,UAAcP,GAAd,OFbW,GEaX,uBAAqDG,IAG9DM,OAAQ,SAACN,GACP,OAAOG,IAAMC,KAAN,UAAcP,GAAd,OFjBW,GEiBX,oBAAkDG,IAG3DO,OAAQ,SAACP,GACP,OAAOG,IAAMC,KAAN,UAAcP,GAAd,OFrBW,GEqBX,oBAAkDG,KCU9CQ,EAjCK,CAElBT,OAAQ,SAACC,GAEP,OADAC,QAAQC,IAAIF,GACLG,IAAMM,IAAN,UAAaZ,GAAb,OHFW,GGEX,kBAA+CG,IAGxDK,KAAM,SAACL,GACL,OAAOG,IAAMC,KAAN,UAAcP,GAAd,OHNW,GGMX,kBAAgDG,IAGzDY,QAAS,SAACZ,GACR,OAAOG,IAAMM,IAAN,UAAaZ,GAAb,OHVW,GGUX,kBAA+CG,IAGxDU,WAAY,SAACV,GACX,OAAOG,IAAMM,IAAN,UAAaZ,GAAb,OHdW,GGcX,wBAAqDG,IAG9DW,SAAU,SAACX,GAET,OADAC,QAAQC,IAAIF,GACLG,IAAMC,KAAN,UAAcP,GAAd,OHnBW,GGmBX,uBAAqDG,IAG9DM,OAAQ,SAACN,GACP,OAAOG,IAAMC,KAAN,UAAcP,GAAd,OHvBW,GGuBX,oBAAkDG,IAG3DO,OAAQ,SAACP,GACP,OAAOG,IAAMC,KAAN,UAAcP,GAAd,OH3BW,GG2BX,oBAAkDG,K,ECzB9Ba,IAAMC,gBAA7BC,E,EAAAA,SAAUC,E,EAAAA,SAGZC,E,2MACFC,MAAQ,CACJC,WAAY,CACRC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXC,QAAS,2BACTC,QAAQ,EACRC,QAAS,IAEbC,cAAe,GACfC,mBAAmB,G,mFAEF,IAAD,OAChB,sBAAC,4BAAAC,EAAA,sDACSC,EAAW,EAAKb,MACLV,EACZE,WAAW,IACXsB,MAAK,SAAAC,GACFF,EAASE,SAAWA,EAASjC,KAC7B,EAAKkC,SAASH,MAGNjC,EACXO,KAAK,IACL2B,MAAK,SAAAG,GACFJ,EAASI,QAAUA,EAAQnC,KAC3B,EAAKkC,SAASH,MAGLK,EACZ1B,WAAW,IACXsB,MAAK,SAAAK,GACFN,EAASM,SAAWA,EAASrC,KAC7B,EAAKkC,SAASH,MApBzB,0CAAD,K,+BAyBM,IAAD,OACL,OACI,kBAAChB,EAAD,CACIuB,MAAO,CACHpB,MAAOqB,KAAKrB,MAEZsB,mBAAoB,WAChB,EAAKN,SAAS,CAAEL,mBAAoB,EAAKX,MAAMW,qBAGnDD,cAAe,SAAAa,GACX,EAAKP,SAAS,CAAEN,cAAea,KAGnCC,mBAAoB,YAA2B,IAAlBC,EAAiB,EAAvBvB,KAAWkB,EAAY,EAAZA,MACxBP,EAAW,EAAKb,MACV,SAARyB,IAAgBZ,EAASH,cAAcR,KAAOkB,GACtC,YAARK,IAAmBZ,EAASH,cAAcP,QAAUiB,GAC5C,aAARK,IAAoBZ,EAASH,cAAcP,QAAUiB,GAC7C,cAARK,IAAqBZ,EAASH,cAAcL,UAAYe,GAChD,cAARK,IAAqBZ,EAASH,cAAcJ,UAAYc,GAChD,YAARK,IAAmBZ,EAASH,cAAcH,QAAUa,GAC5C,WAARK,IAAkBZ,EAASH,cAAcF,OAASY,GAC1C,YAARK,IAAmBZ,EAASH,cAAcD,QAAUW,GAC5C,aAARK,IAAoBZ,EAASH,cAAcgB,SAAWN,GAC1D,EAAKJ,SAASH,IAGlBc,iBAAkB,YAA2B,IAAlBF,EAAiB,EAAvBvB,KAAWkB,EAAY,EAAZA,MACtBP,EAAW,EAAKb,MACV,SAARyB,IAAgBZ,EAASZ,WAAWC,KAAOkB,GACnC,YAARK,IAAmBZ,EAASZ,WAAWE,QAAUiB,GACzC,cAARK,IAAqBZ,EAASZ,WAAWI,UAAYe,GAC7C,cAARK,IAAqBZ,EAASZ,WAAWK,UAAYc,GAC7C,YAARK,IAAmBZ,EAASZ,WAAWQ,QAAUW,GACrD,EAAKJ,SAASH,IAGlBe,qBAAsB,SAACL,GACnB,IAAMV,EAAW,EAAKb,MACtBa,EAASE,SAASc,QAAQN,GAE1B,EAAKP,SAASH,IAElBiB,gBAAiB,WACb,IAAMjB,EAAW,EAAKb,MACCa,EAAfZ,WACRY,EAASZ,WAAWC,KAAO,GAC3BW,EAASZ,WAAWE,QAAU,GAC9BU,EAASZ,WAAWG,SAAW,GAC/BS,EAASZ,WAAWI,UAAY,GAChCQ,EAASZ,WAAWK,UAAY,GAChCO,EAASZ,WAAWM,QAAU,2BAC9BM,EAASZ,WAAWO,QAAS,EAC7BK,EAASZ,WAAWQ,QAAU,GAC9B,EAAKO,SAASH,MAIhBQ,KAAKU,MAAMC,c,GApGR7D,aA6GV2B,ICnHFmC,G,MAAa,SAACC,GACvB,OAAGA,EAAeC,IAAOD,GAAQA,OAAO,qBAGpC,2BAAG,gDCREE,G,MAAkB,SAACC,GAC5B,OAAKA,EAELA,EAAaA,EACRC,MAAM,KACNC,KAAI,SAACC,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,MACnDC,KAAK,KALcP,IC8CbQ,G,2LAtCEC,GAAU,IAAD,EACwBA,EAAQ9C,MAA1CC,EADU,EACVA,WAAYgB,EADF,EACEA,QADF,EACWF,SAC7Bd,EAAWC,KAAOD,EAAWC,KAAK6C,cAClC9C,EAAWE,QAAUF,EAAWE,QAAQ4C,cACxC9C,EAAWK,UAAYL,EAAWK,UAAUyC,cAE5C9B,EAAQ+B,SAAQ,SAAAC,GACRA,EAAO/C,OAASD,EAAWK,UAAUyC,gBACrC9C,EAAWK,UAAY2C,EAAOC,QAItCC,EACCtE,OAAOoB,GACPa,MAAK,SAAAsC,GACFN,EAAQlB,qBAAqBwB,EAAItE,MACjCgE,EAAQhB,qBAEPuB,OAAM,SAAAC,GACHvE,QAAQC,IAAIsE,Q,+BAId,IAAD,OACL,OACI,kBAAC,EAAD,MACK,SAACR,GACE,OACI,6BACI,4BAAQS,KAAK,SAASC,QAAS,kBAAM,EAAKC,aAAaX,KAAvD,8B,GA/BG3E,cCoDhBuF,G,2LA9CEnC,EAASN,GAClBM,EAAQrB,KAAOqB,EAAQrB,KAAK6C,cAC5BxB,EAAQpB,QAAUoB,EAAQpB,QAAQ4C,cAClCxB,EAAQjB,UAAYiB,EAAQjB,UAAUyC,cAEtC9B,EAAQ+B,SAAS,SAAAC,GACVA,EAAO/C,OAASqB,EAAQjB,UAAUyC,gBACjCxB,EAAQjB,UAAY2C,EAAOC,QAGnCC,EACCtE,OAAQ0C,GACRT,MAAM,SAAAsC,GACHrE,QAAQC,IAAIoE,MAEfC,OAAO,SAAAC,GACJvE,QAAQC,IAAIsE,Q,+BAKhB,OACI,kBAAC,EAAD,MACK,SAAAR,GAAY,IAAD,EACwBA,EAAQ9C,MAAhCC,EADA,EACAA,WACFC,GAFE,EACYe,QAC8DhB,EAA5EC,MAAMC,EAAsEF,EAAtEE,QAASE,EAA6DJ,EAA7DI,UAAWC,EAAkDL,EAAlDK,UAA4BG,GAAsBR,EAAvCM,QAAuCN,EAA9BO,OAA8BP,EAAtBQ,SAAsBR,EAAbyB,SAErE,OACI,yBAAKrD,UAAU,qBACX,6BACI,yBAAKA,UAAU,6BAA4B,2BAAOkF,KAAK,OAAOrD,KAAK,OAAOyD,SAAU,SAAAC,GAAC,OAAId,EAAQnB,iBAAkBiC,EAAEC,SAAUzC,MAAOlB,EAAKwC,cAAeoB,YAAY,sBACtK,yBAAKzF,UAAU,6BAA6B,2BAAOkF,KAAK,OAAOrD,KAAK,YAAYyD,SAAU,SAAAC,GAAC,OAAId,EAAQnB,iBAAkBiC,EAAEC,SAAUzC,MAAOgB,EAAgB9B,GAAYwD,YAAY,oBACpL,yBAAKzF,UAAU,oBAAoB,2BAAOkF,KAAK,OAAOrD,KAAK,UAAUyD,SAAU,SAAAC,GAAC,OAAId,EAAQnB,iBAAkBiC,EAAEC,SAAUzC,MAAOgB,EAAgBjC,GAAU2D,YAAY,qBACvK,yBAAKzF,UAAU,oBAAoB,2BAAOkF,KAAK,OAAOrD,KAAK,YAAYyD,SAAU,SAAAC,GAAC,OAAId,EAAQnB,iBAAkBiC,EAAEC,SAAUzC,MAAOf,EAAYyD,YAAY,uBAC3J,yBAAKzF,UAAU,oBAAoB,2BAAOkF,KAAK,OAAOrD,KAAK,UAAUyD,SAAU,SAAAC,GAAC,OAAId,EAAQnB,iBAAkBiC,EAAEC,SAAUzC,MAAOX,EAAUqD,YAAY,0BAEvJ,yBAAKzF,UAAU,uBAAuB,kBAAC,EAAD,gB,GAtCzCF,cCSd4F,E,iLAZP,OACI,kBAAC,EAAD,MACK,SAACjB,GACE,OACI,yBAAKzE,UAAU,eAAemF,QAAU,kBAAKV,EAAQxB,uBAAuB,yBAAK9C,IAAKC,EAAQ,IAAuCF,IAAI,uB,GAP7IJ,aC+BL6F,E,qLA3BGlB,GAAU,IACZpC,EAAkBoC,EAAQ9C,MAA1BU,cACRyC,EACC/D,OAAQsB,GACRI,MAAM,SAAAsC,GACHN,EAAQxB,wBAEX+B,OAAO,SAAAC,GACJvE,QAAQC,IAAIsE,Q,+BAIX,IAAD,OACJ,OACI,kBAAC,EAAD,MACK,SAACR,GACE,OACI,6BACI,4BAAQS,KAAK,SAASC,QAAU,kBAAK,EAAKS,aAAcnB,KAAxD,+B,GApBP3E,aCsCN6F,E,qLApCGd,EAAKJ,GAAU,IACjB/B,EAAa+B,EAAQ9C,MAArBe,SACRoC,EACC9D,OAAO,CACJ6D,QAEHpC,MAAM,SAAAsC,GACH,IAAIc,EAAQ,EACZnD,EAASiC,SAAS,SAAAzB,GACXA,EAAQ2B,MAAQA,WACRnC,EAASmD,GAChBpB,EAAQxB,sBAEZ4C,UAGPb,OAAO,SAAAC,GAAG,OAAIvE,QAAQC,IAAKsE,Q,+BAGvB,IAAD,OACJ,OACI,kBAAC,EAAD,MACK,SAACR,GAAa,IAEHI,EADkBJ,EAAQ9C,MAA1BU,cACAwC,IACR,OACI,6BACI,4BAAQK,KAAK,SAASC,QAAU,kBAAK,EAAKW,aAAajB,EAAKJ,KAA5D,+B,GA7BP3E,aCsCNiG,G,uLA/BP,OACI,kBAAC,EAAD,MACK,SAAAtB,GAAY,IACDpC,EAAkBoC,EAAQ9C,MAA1BU,cACFR,EAA4EQ,EAA5ER,KAAMC,EAAsEO,EAAtEP,QAASE,EAA6DK,EAA7DL,UAA+BG,GAA8BE,EAAlDJ,UAAkDI,EAAvCH,QAAuCG,EAA9BF,QAAQC,EAAsBC,EAAtBD,QAASiB,EAAahB,EAAbgB,SAErE,OACI,yBAAKrD,UAAU,0BACX,yBAAKA,UAAU,qBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,6BAAf,kBAGA,2BAAOgG,QAAQ,QAAf,kBAA4C,2BAAOd,KAAK,OAAOrD,KAAK,OAAOyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOlB,IAAQ,6BACjJ,2BAAOmE,QAAQ,WAAf,qBAAkD,2BAAOd,KAAK,OAAOrD,KAAK,UAAUyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOjB,IAAW,6BAC7J,2BAAOkE,QAAQ,aAAf,uBAAsD,2BAAOd,KAAK,OAAOrD,KAAK,YAAYyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOf,IAAc,6BACtK,2BAAOgE,QAAQ,WAAf,oBAAiD,2BAAOd,KAAK,OAAOrD,KAAK,SAASyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOZ,IAAW,6BAC3J,2BAAO6D,QAAQ,WAAf,0BAAuD,2BAAOd,KAAK,OAAOrD,KAAK,UAAUyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOa,EAAWxB,KAAa,6BAC/K,2BAAO4D,QAAQ,YAAf,2BAAyD,2BAAOd,KAAK,OAAOrD,KAAK,WAAWyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOM,GAAsB,wBAA0B,6BAE1M,kBAAC4C,EAAD,MACA,kBAAC,EAAD,e,GAxBDnG,cC4DhBoG,G,6LAzDItD,EAASiC,GACpB,IAAIhD,EAAO,GAIX,OAHAe,EAAQ+B,SAAQ,SAAAC,GACRC,IAAQD,EAAOC,MAAKhD,EAAO+C,EAAO/C,SAEnCA,I,qCAGI4C,GAAU,IAAD,SAC6BA,EAAQ9C,MAAjDe,EADY,EACZA,SAAUE,EADE,EACFA,QAASN,EADP,EACOA,kBAC3B,GAAII,EACA,OACI,yBAAK1C,UAAU,oBACd0C,EAASyD,OACN,yBAAKnG,UAAU,eACf,kBAAC,EAAD,MAEY0C,EAASwB,KAAI,SAAAhB,GAAY,IACb2B,EAAwE3B,EAAxE2B,IAAKhD,EAAmEqB,EAAnErB,KAAMC,EAA6DoB,EAA7DpB,QAASE,EAAoDkB,EAApDlB,UAAWC,EAAyCiB,EAAzCjB,UAAWE,EAA8Be,EAA9Bf,OAAQC,EAAsBc,EAAtBd,QAASiB,EAAaH,EAAbG,SAC/D+C,EAAc,EAAKC,eAAezD,EAASX,GAC/C,OACI,yBAAKmB,IAAKyB,EAAK7E,UAAU,qBACrB,yBAAKA,UAAU,oBACXmF,QAAS,WACLV,EAAQpC,cAAca,GACtBuB,EAAQxB,uBAEZ,yBAAK9C,IAAKC,EAAQ,IAAsCF,IAAI,UAEhE,yBAAKF,UAAU,6BAA6B6B,EAAKwC,eACjD,yBAAKrE,UAAU,6BAA6B+D,EAAgBqC,IAC5D,yBAAKpG,UAAU,8BAA8B+D,EAAgBjC,IAC7D,yBAAK9B,UAAU,8BAA8BgC,GAC7C,yBAAKhC,UAAU,8BAA8B4D,EAAWxB,IACxD,yBAAKpC,UAAU,6BC7CrC,SAAEmC,GACpB,OAAQA,GACJ,KAAK,EACD,OACI,yBAAKnC,UAAU,kBACH,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,WAAsB,IAAXmC,EAAkB,uBAAyB,wBAC3D,yBAAKnC,WAAsB,IAAXmC,EAAkB,uBAAyB,wBAC3D,yBAAKnC,WAAsB,IAAXmC,EAAkB,uBAAyB,0BDmCCmE,CAAOnE,GAAnD,IAA6DyB,EAAWP,SAO5F,qDACHf,GAAqB,kBAAC,EAAD,S,+BAM5B,IAAD,OACL,OACI,kBAAC,EAAD,MACK,SAACmC,GAAD,OAAa,EAAK8B,eAAe9B,U,GArD3B3E,cE+BRiG,E,iLA9BP,OACI,kBAAC,EAAD,MACK,SAAAtB,GAAY,IACDpC,EAAkBoC,EAAQ9C,MAA1BU,cACFR,EAA4EQ,EAA5ER,KAAMC,EAAsEO,EAAtEP,QAASE,EAA6DK,EAA7DL,UAA+BG,GAA8BE,EAAlDJ,UAAkDI,EAAvCH,QAAuCG,EAA9BF,QAAQC,EAAsBC,EAAtBD,QAASiB,EAAahB,EAAbgB,SAErE,OACI,yBAAKrD,UAAU,0BACX,yBAAKA,UAAU,qBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,6BAAf,kBAGA,2BAAOgG,QAAQ,QAAf,kBAA4C,2BAAOd,KAAK,OAAOrD,KAAK,OAAOyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOlB,IAAQ,6BACjJ,2BAAOmE,QAAQ,WAAf,qBAAkD,2BAAOd,KAAK,OAAOrD,KAAK,UAAUyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOjB,IAAW,6BAC7J,2BAAOkE,QAAQ,aAAf,uBAAsD,2BAAOd,KAAK,OAAOrD,KAAK,YAAYyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOf,IAAc,6BACtK,2BAAOgE,QAAQ,WAAf,oBAAiD,2BAAOd,KAAK,OAAOrD,KAAK,SAASyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOZ,IAAW,6BAC3J,2BAAO6D,QAAQ,WAAf,0BAAuD,2BAAOd,KAAK,OAAOrD,KAAK,UAAUyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOa,EAAWxB,KAAa,6BAC/K,2BAAO4D,QAAQ,YAAf,2BAAyD,2BAAOd,KAAK,OAAOrD,KAAK,WAAWyD,SAAU,SAAAC,GAAC,OAAId,EAAQtB,mBAAoBoC,EAAEC,SAAUzC,MAAOM,GAAsB,wBAA0B,6BAE1M,kBAAC4C,EAAD,e,GAvBDnG,aCwDhB0G,G,6LArDI5D,EAASiC,GACpB,IAAIhD,EAAO,GAIX,OAHAe,EAAQ+B,SAAQ,SAAAC,GACRC,IAAQD,EAAOC,MAAKhD,EAAO+C,EAAO/C,SAEnCA,I,qCAGI4C,GAAU,IAAD,EAC8BA,EAAQ9C,MAAxCmB,GADE,EACZJ,SADY,EACFI,UAAUR,EADR,EACQA,kBAE5B,GADA5B,QAAQC,IAAImC,EAAS,IACjBA,EACA,OACI,yBAAK9C,UAAU,oBACV8C,EAASqD,OACN,yBAAKnG,UAAU,sBAEP8C,EAASoB,KAAI,SAAAuC,GAAY,IACb5B,EAAqE4B,EAArE5B,IAAK6B,EAAgED,EAAhEC,SAAUC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,OAAQC,EAAiCJ,EAAjCI,UAAW1E,EAAsBsE,EAAtBtE,OAAQ2E,EAAcL,EAAdK,UAE/D,OACI,yBAAK1D,IAAKyB,EAAK7E,UAAU,sBACrB,yBAAKA,UAAU,cAAc0G,EAASrC,eACtC,yBAAKrE,UAAU,qBACX,yBAAKA,UAAU,iBAAiB+D,EAAgB4C,IAChD,yBAAK3G,UAAU,YAAf,IAA4B4G,IAEhC,yBAAK5G,UAAU,aAAamC,GAAU,kBACtC,yBAAKnC,UAAU,eAAe4D,EAAWkD,IAEzC,yBAAK9G,UAAU,eAAc,+BAAQ6G,SAOzD,qDACHvE,GAAqB,kBAACyE,EAAD,S,+BAM5B,IAAD,OACL,OACI,kBAAC,EAAD,MACK,SAACtC,GAAD,OAAa,EAAKuC,eAAevC,U,GAjD3B3E,cC4CRmH,E,2MAxCXtF,MAAQ,CACJuF,QAAS,I,wEAGH,IAAD,OACL,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,yBAAKlH,UAAU,sBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BACX,4BACI,wBAAImF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,YAAa,yBAAK/G,IAAKC,EAAQ,IAA0CF,IAAI,oBAA5H,SACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,WAAY,yBAAK/G,IAAKC,EAAQ,IAAyCF,IAAI,mBAA1H,QACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,eAAgB,yBAAK/G,IAAKC,EAAQ,IAA4CF,IAAI,sBAAjI,YACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,aAAc,yBAAK/G,IAAKC,EAAQ,IAA2CF,IAAI,qBAA9H,UACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,YAAa,yBAAK/G,IAAKC,EAAQ,IAA0CF,IAAI,oBAA5H,SACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,YAAa,yBAAK/G,IAAKC,EAAQ,IAAyCF,IAAI,oBAA3H,SACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,eAAgB,yBAAK/G,IAAKC,EAAQ,IAA4CF,IAAI,oBAAoBiF,QAAS,WAAQ,EAAKxC,SAAS,CAAEwE,KAAM,gBAA5L,YACA,wBAAIhC,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,eAAgB,yBAAK/G,IAAKC,EAAQ,IAA4CF,IAAI,sBAAjI,YACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,eAAgB,yBAAK/G,IAAKC,EAAQ,IAA4CF,IAAI,sBAAjI,YACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,cAAe,yBAAK/G,IAAKC,EAAQ,IAA4CF,IAAI,sBAAhI,WACA,wBAAIiF,QAAU,WAAQ,EAAKxC,SAAS,CAAEuE,QAAS,WAAY,yBAAK/G,IAAKC,EAAQ,IAAwCF,IAAI,kBAAzH,YAKe,aAAvB8C,KAAKrB,MAAMuF,QAAyB,kBAAC,EAAD,MACb,aAAvBlE,KAAKrB,MAAMuF,QAAyB,kBAAC,EAAD,MACb,aAAvBlE,KAAKrB,MAAMuF,QAAyB,kBAAC,EAAD,MACpC,qC,GAlCWpH,aCFpBsH,E,iLANP,OACI,8C,GAJWtH,aCqCRuH,G,uLAfP,OACI,kBAAC,IAAD,KACI,yBAAKrH,UAAU,gBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,gBAAgBC,UAAWE,IAC7C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,yBAAyBC,UAAWG,IACtD,kBAAC,IAAD,CAAOH,UAAWJ,W,GAnBdtH,cCDb8H,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCDNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.83243f8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/artihaus.3864a6f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-icon.069702be.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-icon.b0479636.svg\";","module.exports = __webpack_public_path__ + \"static/media/email-icon.66a95aa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/chat-icon.be965a99.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact-icon.96587068.svg\";","module.exports = __webpack_public_path__ + \"static/media/agenda-icon.e2678ba6.svg\";","module.exports = __webpack_public_path__ + \"static/media/notes-icon.02c33286.svg\";","module.exports = __webpack_public_path__ + \"static/media/todo-icon.e9b8c94a.svg\";","module.exports = __webpack_public_path__ + \"static/media/project-icon.865d2dd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/expense-icon.afa028f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/earning-icon.38e07795.svg\";","module.exports = __webpack_public_path__ + \"static/media/invoice-icon.e26104ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-icon.658dc7dc.svg\";","import React, { Component } from 'react'\n\nclass ArtihausDashboard extends Component{\n\n    render(){\n        return(\n            <div>Welcome to Artihaus Dashboard!</div>\n        )\n    }\n\n}\nexport default ArtihausDashboard","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './Header.css'\n\nclass AdminPortalDashboardHeader extends Component {\n\n    render() {\n        return (\n                <div className='ap-ad-header'>\n                    <Link to=\"/admin-portal\" alt='Home Link' className='ap-ad-header--artihaus'><img src={require('../../Assets/Images/artihaus.svg')} alt='home logo'/></Link>\n\n                    <ul className='ap-ad-header--nav'>\n                        <li>\n                            <Link to=\"/admin-portal\" alt='Home Link'>Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/admin-portal/support\" alt='Home Link'>Support</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/admin-portal/about\" alt='Home Link'>About Us</Link>\n                        </li>\n                    </ul>\n                </div>\n        )\n    }\n\n}\nexport default AdminPortalDashboardHeader","import React, { Component } from 'react'\nimport './SubHeader.css'\n\n\nclass SubHeader extends Component {\n\n    render(){\n        return(\n            <div className='ap-ap-subheader'>\n                <div className='ap-ap-subheader--my-portal'>My Portal</div>\n                <div className='ap-ap-subheader--my-status'>Sub Header</div>\n            </div>\n        )\n    }\n}\n\nexport default SubHeader","// export const baseUrl = 'https://git.heroku.com/'\n// export const apiKey = 'artihausapi.git'\n\nexport const baseUrl = 'http://localhost:8080'\n\nexport const apiKey = ''\n","import axios from 'axios';\nimport { baseUrl, apiKey } from '../Api/api'\n\nconst ClientsApi = {\n\n  create: (data) => {\n    console.log(data)\n    return axios.post(`${baseUrl}${apiKey}/clients/create`, data);\n  },\n\n  read: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/clients/read`, data);\n  },\n\n  update: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/clients/update`, data);\n  },\n\n  remove: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/clients/delete`, data);\n  }\n}\n\nexport default ClientsApi","import axios from 'axios';\nimport { baseUrl, apiKey } from '../Api/api'\n\nconst ProjectsApi = {\n\n  create: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/projects/create`, data);\n  },\n\n  read: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/projects/read`, data);\n  },\n\n  read_false: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/projects/read-false`, data);\n  },\n\n  readById: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/projects/read/:_id`, data);\n  },\n\n  update: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/projects/update`, data);\n  },\n\n  remove: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/projects/delete`, data);\n  }\n}\n\nexport default ProjectsApi","import axios from 'axios';\nimport { baseUrl, apiKey } from '../Api/api'\n\nconst ProjectsApi = {\n\n  create: (data) => {\n    console.log(data)\n    return axios.get(`${baseUrl}${apiKey}/expenses/read`, data);\n  },\n\n  read: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/read`, data);\n  },\n\n  readAll: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/expenses/read`, data);\n  },\n\n  read_false: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/expenses/read-false`, data);\n  },\n\n  readById: (data) => {\n    console.log(data)\n    return axios.post(`${baseUrl}${apiKey}/expenses/read/:_id`, data);\n  },\n\n  update: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/update`, data);\n  },\n\n  remove: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/delete`, data);\n  }\n}\n\nexport default ProjectsApi","import React, { Component } from 'react'\nimport Moment from 'moment'\n\nimport ClientsApi from '../../Utils/Server/Clients'\nimport ProjectsApi from '../../Utils/Server/Projects'\nimport ExpensesApi from '../../Utils/Server/Expenses'\n\nconst { Provider, Consumer } = React.createContext()\n\n\nclass MyProvider extends Component {\n    state = {\n        newProject: {\n            name: '',\n            address: '',\n            address2: '',\n            city_code: '',\n            client_id: '',\n            user_id: '5e21fa1183e005ceafe11c16',\n            status: false,\n            started: '',\n        },\n        updateProject: [],\n        isModalDisplaying: false\n    }\n    componentDidMount() {\n        (async () => {\n            const newState = this.state\n            const projects = ProjectsApi\n                .read_false({})\n                .then(projects => {\n                    newState.projects = projects.data\n                    this.setState(newState)\n                })\n\n            const clients = ClientsApi\n                .read({})\n                .then(clients => {\n                    newState.clients = clients.data\n                    this.setState(newState)\n                })\n\n            const expenses = ExpensesApi\n                .read_false({})\n                .then(expenses => {\n                    newState.expenses = expenses.data\n                    this.setState(newState)\n                })\n        })()\n    }\n\n    render() {\n        return (\n            <Provider\n                value={{\n                    state: this.state,\n\n                    updateModalDisplay: () => {\n                        this.setState({ isModalDisplaying: !this.state.isModalDisplaying })\n                    },\n\n                    updateProject: project => {\n                        this.setState({ updateProject: project })\n                    },\n\n                    updateProjectValue: ({ name: key, value }) => {\n                        const newState = this.state\n                        if (key === 'name') newState.updateProject.name = value\n                        if (key === 'address') newState.updateProject.address = value\n                        if (key === 'address2') newState.updateProject.address = value\n                        if (key === 'city_code') newState.updateProject.city_code = value\n                        if (key === 'client_id') newState.updateProject.client_id = value\n                        if (key === 'user_id') newState.updateProject.user_id = value\n                        if (key === 'status') newState.updateProject.status = value\n                        if (key === 'started') newState.updateProject.started = value\n                        if (key === 'finished') newState.updateProject.finished = value\n                        this.setState(newState)\n                    },\n\n                    newProjectCreate: ({ name: key, value }) => {\n                        const newState = this.state\n                        if (key === 'name') newState.newProject.name = value\n                        if (key === 'address') newState.newProject.address = value\n                        if (key === 'city_code') newState.newProject.city_code = value\n                        if (key === 'client_id') newState.newProject.client_id = value\n                        if (key === 'started') newState.newProject.started = value\n                        this.setState(newState)\n                    },\n\n                    addNewProjectToState: (project) => {\n                        const newState = this.state\n                        newState.projects.unshift(project)\n\n                        this.setState(newState)\n                    },\n                    clearNewProject: () => {\n                        const newState = this.state\n                        const { newProject } = newState\n                        newState.newProject.name = ''\n                        newState.newProject.address = ''\n                        newState.newProject.address2 = ''\n                        newState.newProject.city_code = ''\n                        newState.newProject.client_id = ''\n                        newState.newProject.user_id = '5e21fa1183e005ceafe11c16'\n                        newState.newProject.status = false\n                        newState.newProject.started = ''\n                        this.setState(newState)\n                }\n                }} >\n\n                    { this.props.children }\n\n            </Provider >\n        )\n    }\n}\n\nexport { MyProvider }\n\nexport default Consumer\n","import React from 'react'\nimport Moment from 'moment'\n\n\nexport const DateFormat = (format) => {\n    if(format) return Moment(format).format('ddd MMMM DD, YYYY')\n\n    return(\n        <i><small>Undergoing</small></i>\n    )\n}","export const CapitalizeFirst = (capitalize) => {\n    if (!capitalize) return capitalize\n\n    capitalize = capitalize\n        .split(' ')\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n        .join(' ')\n    return capitalize\n}","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport ProjectApi from '../../Utils/Server/Projects'\n\nimport './Close.css'\n\nclass AddProjectButton extends Component {\n\n    handleSubmit(context) {\n        const { newProject, clients, projects } = context.state\n        newProject.name = newProject.name.toLowerCase()\n        newProject.address = newProject.address.toLowerCase()\n        newProject.client_id = newProject.client_id.toLowerCase()\n\n        clients.forEach(client => {\n            if (client.name === newProject.client_id.toLowerCase()) {\n                newProject.client_id = client._id\n            }\n        })\n        \n        ProjectApi\n        .create(newProject)\n        .then(res => {\n            context.addNewProjectToState(res.data)\n            context.clearNewProject()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {(context) => {\n                    return (\n                        <div>\n                            <button type='submit' onClick={() => this.handleSubmit(context)}>Create New Project</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddProjectButton","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport { DateFormat } from '../GeneralFunctions/Moment'\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\n\nimport ProjectApi from '../../Utils/Server/Projects'\nimport AddProjectButton from '../Buttons/AddProjectButton'\n\nimport './AddProjectCard.css'\n\nclass AddProjectCard extends Component {\n\n    handleSubmit(project, clients) {\n        project.name = project.name.toLowerCase()\n        project.address = project.address.toLowerCase()\n        project.client_id = project.client_id.toLowerCase()\n        \n        clients.forEach( client => {\n            if(client.name === project.client_id.toLowerCase()) {\n                project.client_id = client._id\n            }\n        })\n        ProjectApi\n        .create( project )\n        .then( res => {\n            console.log(res)\n        })\n        .catch( err => {\n            console.log(err)\n        })\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {context => {\n                    const { newProject, clients } = context.state\n                    let { name, address, city_code, client_id, user_id, status, started, finished } = newProject\n\n                    return (\n                        <div className='ap-ad--grid--card'>\n                            <div>\n                                <div className='ap-ad--card-body --header'><input type=\"text\" name=\"name\" onChange={e => context.newProjectCreate( e.target )} value={name.toUpperCase()} placeholder='NEW PROJECT NAME'/></div>\n                                <div className='ap-ad--card-body --header' ><input type=\"text\" name=\"client_id\" onChange={e => context.newProjectCreate( e.target )} value={CapitalizeFirst(client_id)} placeholder='Project Client'/></div>\n                                <div className='ap-ad--card-body' ><input type=\"text\" name=\"address\" onChange={e => context.newProjectCreate( e.target )} value={CapitalizeFirst(address)} placeholder='Project Address'/></div>\n                                <div className='ap-ad--card-body' ><input type=\"text\" name=\"city_code\" onChange={e => context.newProjectCreate( e.target )} value={city_code}  placeholder='Project City Code'/></div>\n                                <div className='ap-ad--card-body' ><input type=\"text\" name=\"started\" onChange={e => context.newProjectCreate( e.target )} value={started}  placeholder='Project Started Date'/></div>\n\n                                <div className='ap-ad--card--button' ><AddProjectButton /></div>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddProjectCard","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport './Close.css'\n\nclass Close extends Component {\n\n    render(){\n        return(\n            <Consumer>\n                {(context) => {\n                    return(\n                        <div className='close-button' onClick={ ()=> context.updateModalDisplay() }><img src={require('../../Assets/Images/close-icon.svg')} alt='close icon'/></div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Close","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport ProjectApi from '../../Utils/Server/Projects'\n\nimport './Close.css'\n\nclass Delete extends Component {\n\n    handleUpdate( context ){\n        const { updateProject } = context.state\n        ProjectApi\n        .update( updateProject )\n        .then( res => {\n            context.updateModalDisplay()\n        })\n        .catch( err => {\n            console.log(err)\n        })\n    }\n\n    render(){\n        return(\n            <Consumer>\n                {(context) => {\n                    return(\n                        <div>\n                            <button type='submit' onClick={ ()=> this.handleUpdate( context ) }>Update This Project</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Delete","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport ProjectApi from '../../Utils/Server/Projects'\n\nimport './Close.css'\n\nclass Delete extends Component {\n\n    handleDelete( _id, context ){\n        const { projects } = context.state\n        ProjectApi\n        .remove({\n            _id\n        })\n        .then( res => {\n            let index = 0\n            projects.forEach( project => {\n                if(project._id === _id){\n                    delete projects[index]\n                    context.updateModalDisplay()\n                }\n                index++\n            })\n        })\n        .catch( err => console.log( err ))\n    }\n\n    render(){\n        return(\n            <Consumer>\n                {(context) => {\n                    const { updateProject } = context.state\n                    const { _id } = updateProject\n                    return(\n                        <div>\n                            <button type='submit' onClick={ ()=> this.handleDelete(_id, context) }>Delete This Project</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Delete","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport Close from '../Buttons/Close'\nimport { DateFormat } from '../GeneralFunctions/Moment'\n\nimport UpdateProjectButton from '../Buttons/UpdateProjectButton'\nimport Delete from '../Buttons/Delete'\n\nimport './EditProjectModal.css'\n\nclass EditProjectModal extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {context => {\n                    const { updateProject } = context.state\n                    let { name, address, city_code, client_id, user_id, status, started, finished } = updateProject\n\n                    return (\n                        <div className='edit-project-container'>\n                            <div className='edit-project-card'>\n                                <Close />\n                                <div className='edit-project-card--header'>\n                                    UPDATE PROJECT\n                                </div>\n                                <label htmlFor=\"name\">Project Name: </label><input type=\"text\" name=\"name\" onChange={e => context.updateProjectValue( e.target )} value={name} /><br />\n                                <label htmlFor=\"address\">Project Address: </label><input type=\"text\" name=\"address\" onChange={e => context.updateProjectValue( e.target )} value={address} /><br />\n                                <label htmlFor=\"city_code\">Project City Code: </label><input type=\"text\" name=\"city_code\" onChange={e => context.updateProjectValue( e.target )} value={city_code}  /><br />\n                                <label htmlFor=\"started\">Project Status: </label><input type=\"text\" name=\"status\" onChange={e => context.updateProjectValue( e.target )} value={status}  /><br />\n                                <label htmlFor=\"started\">Project Started Date: </label><input type=\"text\" name=\"started\" onChange={e => context.updateProjectValue( e.target )} value={DateFormat(started)}  /><br />\n                                <label htmlFor=\"finished\">Project Finished Date: </label><input type=\"text\" name=\"finished\" onChange={e => context.updateProjectValue( e.target )} value={finished ? finished : 'Enter Finished Date'}  /><br />\n\n                                <UpdateProjectButton />\n                                <Delete />\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditProjectModal","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\n\nimport { DateFormat } from '../GeneralFunctions/Moment'\nimport { Status } from '../GeneralFunctions/Status'\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\nimport AddProjectCard from './AddProjectCard'\nimport EditProjectModal from './EditProjectModal'\n\nimport './Projects.css'\n\nclass Projects extends Component {\n\n    handleClientId(clients, _id) {\n        let name = ''\n        clients.forEach(client => {\n            if (_id === client._id) name = client.name\n        })\n        return name\n    }\n\n    handleProjects(context) {\n        const { projects, clients, isModalDisplaying } = context.state\n        if (projects) {\n            return (\n                <div className='ap-ad--container'>\n                {projects.length ?\n                    <div className='ap-ad--grid'>\n                    <AddProjectCard />\n                            {\n                                projects.map(project => {\n                                    const { _id, name, address, city_code, client_id, status, started, finished } = project\n                                    let client_name = this.handleClientId(clients, client_id)\n                                    return (\n                                        <div key={_id} className='ap-ad--grid--card'>\n                                            <div className='app-ad--card-edit'\n                                                onClick={() => {\n                                                    context.updateProject(project)\n                                                    context.updateModalDisplay()\n                                                }}>\n                                                <img src={require('../../Assets/Images/edit-icon.svg')} alt='edit' />\n                                            </div>\n                                            <div className='ap-ad--card-body --header'>{name.toUpperCase()}</div>\n                                            <div className='ap-ad--card-body --header'>{CapitalizeFirst(client_name)}</div>\n                                            <div className='ap-ad--card-body --address'>{CapitalizeFirst(address)}</div>\n                                            <div className='ap-ad--card-body --address'>{city_code}</div>\n                                            <div className='ap-ad--card-body --address'>{DateFormat(started)}</div>\n                                            <div className='ap-ad--card-body  --dates'>{Status(status)} {DateFormat(finished)}</div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        :\n                        <div>Nothing to see here!</div>}\n                    {isModalDisplaying && <EditProjectModal />}\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {(context) => this.handleProjects(context)}\n            </Consumer>\n        )\n    }\n}\n\nexport default Projects","import React from 'react'\nimport './status.css'\n\nexport const Status = ( status ) => {\n    switch (status) {\n        case false:\n            return (\n                <div className='--progress_bar'>\n                            <div className='start_progress'></div>\n                            <div className='half_1_progress'></div>\n                            <div className='half_2_progress'></div>\n                            <div className={status === true ? 'half_3_progress done' : 'half_3_progress red'}></div>\n                            <div className={status === true ? 'half_4_progress done' : 'half_4_progress red'}></div>\n                            <div className={status === true ? 'finish_progress done' : 'finish_progress red'}></div>\n                        </div>\n            )\n    }\n}","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport Close from '../Buttons/Close'\nimport UpdateProjectButton from '../Buttons/UpdateProjectButton'\nimport { DateFormat } from '../GeneralFunctions/Moment'\n\nimport ProjectApi from '../../Utils/Server/Projects'\n\n\nclass EditProjectModal extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {context => {\n                    const { updateProject } = context.state\n                    let { name, address, city_code, client_id, user_id, status, started, finished } = updateProject\n\n                    return (\n                        <div className='edit-project-container'>\n                            <div className='edit-project-card'>\n                                <Close />\n                                <div className='edit-project-card--header'>\n                                    UPDATE PROJECT\n                                </div>\n                                <label htmlFor=\"name\">Project Name: </label><input type=\"text\" name=\"name\" onChange={e => context.updateProjectValue( e.target )} value={name} /><br />\n                                <label htmlFor=\"address\">Project Address: </label><input type=\"text\" name=\"address\" onChange={e => context.updateProjectValue( e.target )} value={address} /><br />\n                                <label htmlFor=\"city_code\">Project City Code: </label><input type=\"text\" name=\"city_code\" onChange={e => context.updateProjectValue( e.target )} value={city_code}  /><br />\n                                <label htmlFor=\"started\">Project Status: </label><input type=\"text\" name=\"status\" onChange={e => context.updateProjectValue( e.target )} value={status}  /><br />\n                                <label htmlFor=\"started\">Project Started Date: </label><input type=\"text\" name=\"started\" onChange={e => context.updateProjectValue( e.target )} value={DateFormat(started)}  /><br />\n                                <label htmlFor=\"finished\">Project Finished Date: </label><input type=\"text\" name=\"finished\" onChange={e => context.updateProjectValue( e.target )} value={finished ? finished : 'Enter Finished Date'}  /><br />\n\n                                <UpdateProjectButton />\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditProjectModal","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\n\nimport { DateFormat } from '../GeneralFunctions/Moment'\nimport { Status } from '../GeneralFunctions/Status'\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\nimport EditExpenseModal from './EditExpenseModal'\n\nimport './Expenses.css'\n\nclass Expenses extends Component {\n\n    handleClientId(clients, _id) {\n        let name = ''\n        clients.forEach(client => {\n            if (_id === client._id) name = client.name\n        })\n        return name\n    }\n\n    handleExpenses(context) {\n        const { projects, expenses, isModalDisplaying } = context.state\n        console.log(expenses[0])\n        if (expenses) {\n            return (\n                <div className='ap-ad--container'>\n                    {expenses.length ?\n                        <div className='ap-ad-expense-grid'>\n                            {\n                                expenses.map(expense => {\n                                    const { _id, category, subcategory, amount, createdBy, status, createdAt } = expense\n                                    // let client_name = this.handleClientId(clients, client_id)\n                                    return (\n                                        <div key={_id} className='ap-ad-expense-card'>\n                                            <div className='--category'>{category.toUpperCase()}</div>\n                                            <div className='--sub-amount-grid'>\n                                                <div className='--subcategory'>{CapitalizeFirst(subcategory)}</div>\n                                                <div className='--amount'>${amount}</div>\n                                            </div>\n                                            <div className='--status'>{!status && 'Status Pending'}</div>\n                                            <div className='--createdAt'>{DateFormat(createdAt)}</div>\n\n                                            <div className='--createdBy'><small>{createdBy}</small></div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        :\n                        <div>Nothing to see here!</div>}\n                    {isModalDisplaying && <EditExpenseModal />}\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {(context) => this.handleExpenses(context)}\n            </Consumer>\n        )\n    }\n}\n\nexport default Expenses\n\n/*\n <div className='app-ad--card-edit'\n                                    //             onClick={() => {\n                                    //                 context.updateProject(project)\n                                    //                 context.updateModalDisplay()\n                                    //             }}>\n                                    //             <img src={require('../../Assets/Images/edit-icon.svg')} alt='edit' />\n                                    //         </div>\n\n                                    //         <div className='ap-ad--card-body --header'>{CapitalizeFirst(client_name)}</div>\n                                    //         <div className='ap-ad--card-body --address'>{CapitalizeFirst(address)}</div>\n                                    //         <div className='ap-ad--card-body --address'>{city_code}</div>\n                                    //         <div className='ap-ad--card-body --address'>{DateFormat(started)}</div>\n                                    //         <div className='ap-ad--card-body  --dates'>{Status(status)} {DateFormat(finished)}</div>\n*/","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport AdminPortalDashboardHeader from '../../../Components/Header/Header'\nimport AdminPortalDashboardSubHeader from '../../../Components/SubHeader/SubHeader'\n\nimport { MyProvider } from '../../../Utils/ContextApi/MyProvider'\n\nimport './AdminPortalDashboard.css'\n\nimport Projects from '../../../Components/Projects/Projects'\nimport Expenses from '../../../Components/Expenses/Expenses'\n\nclass AdminPortalDashboard extends Component {\n\n    state = {\n        display: ''\n    }\n\n    render() {\n        return (\n            <MyProvider>\n                <AdminPortalDashboardHeader />\n                <AdminPortalDashboardSubHeader />\n\n                <div className='ap-ad-admin-portal'>\n                    <div className='ap-ap-dashboard' >\n                        <div className='ap-ap-dashboardsidenav'>\n                            <ul>\n                                <li onClick={ () => { this.setState({ display: 'Email' })}}><img src={require('../../../Assets/Images/email-icon.svg')} alt='email link icon' />Email</li>\n                                <li onClick={ () => { this.setState({ display: 'Chat' })}}><img src={require('../../../Assets/Images/chat-icon.svg')} alt='chat link icon' />Chat</li>\n                                <li onClick={ () => { this.setState({ display: 'Contacts' })}}><img src={require('../../../Assets/Images/contact-icon.svg')} alt='contact link icon' />Contacts</li>\n                                <li onClick={ () => { this.setState({ display: 'Agenda' })}}><img src={require('../../../Assets/Images/agenda-icon.svg')} alt='agenda link icon' />Agenda</li>\n                                <li onClick={ () => { this.setState({ display: 'Notes' })}}><img src={require('../../../Assets/Images/notes-icon.svg')} alt='notes link icon' />Notes</li>\n                                <li onClick={ () => { this.setState({ display: 'ToDos' })}}><img src={require('../../../Assets/Images/todo-icon.svg')} alt='to do link icon' />ToDos</li>\n                                <li onClick={ () => { this.setState({ display: 'Projects' })}}><img src={require('../../../Assets/Images/project-icon.svg')} alt='project link icon' onClick={() => { this.setState({ menu: 'projects' }) }} />Projects</li>\n                                <li onClick={ () => { this.setState({ display: 'Expenses' })}}><img src={require('../../../Assets/Images/expense-icon.svg')} alt='expense link icon' />Expenses</li>\n                                <li onClick={ () => { this.setState({ display: 'Earnings' })}}><img src={require('../../../Assets/Images/earning-icon.svg')} alt='earning link icon' />Earnings</li>\n                                <li onClick={ () => { this.setState({ display: 'Invoice' })}}><img src={require('../../../Assets/Images/invoice-icon.svg')} alt='invoice link icon' />Invoice</li>\n                                <li onClick={ () => { this.setState({ display: 'Maps' })}}><img src={require('../../../Assets/Images/map-icon.svg')} alt='map link icon' /> Maps</li>\n                            </ul>\n                        </div>\n                    </div>\n                    {\n                        this.state.display === 'Projects' ? <Projects /> :\n                        this.state.display === 'Expenses' ? <Expenses /> :\n                        this.state.display === 'Earnings' ? <Projects /> :\n                        <span />\n                    }\n                </div>\n            </MyProvider >\n        )\n    }\n\n}\nexport default AdminPortalDashboard","import React, { Component } from 'react'\n\nclass _404Page extends Component {\n\n    render(){\n        return(\n            <div>404 Page!</div>\n        )\n    }\n}\n\nexport default _404Page","/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { Component } from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\n\nimport Artihaus from '../Artihaus/Pages/ArtihausDashboard/ArtihausDashboard'\nimport AdminPortal from '../AdminPortal/Pages/AdminPortalDashboard/AdminPortalDashboard'\nimport AdminPortalProjects from '../Components/Projects/Projects'\nimport _404Page from '../Artihaus/Pages/_404Page/_404Page'\n\nimport './routes.css'\n// import AdminPortalExpenses from '../Artihaus/Administrator/pages/expenses/expenses_page'\n\nclass MainContainer extends Component {\n    // getNavBAr(window){\n    //     const {pathname} = window.location\n\n    //     if(pathname.includes('/admin')) return ( <AdminNotificationBar/> )\n    //     else if(pathname.includes('/renovations')) return ( <RenovationsNotificationBar/> )\n    //     else if(pathname.includes('/hardscapes')) return ( <HardscapesNotificationBar/> )\n    // <Route exact path='/admin_portal/expenses' component={AdminPortalExpenses} />\n\n    // }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className='ap-container'>\n                    <Switch>\n                        <Route exact path='/' component={Artihaus} />\n                        <Route exact path='/admin-portal' component={AdminPortal} />\n                        <Route exact path='/admin-portal/projects' component={AdminPortalProjects} />\n                        <Route component={_404Page}/>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default MainContainer","import React from 'react';\nimport Route from './routes/route'\n\nfunction App() {\n  return (\n    <div>\n      <Route />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Style/globalStyle.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}