{"version":3,"sources":["Assets/Images/date-picker-icon.svg","Assets/Images/close-icon.svg","Assets/Images/edit-icon.svg","Assets/Images/expense-icon-on-white.svg","Assets/Images/earning-icon-on-white.svg","Assets/Images/timesheet-icon-on-white.svg","Assets/Images/email-icon.svg","Assets/Images/chat-icon.svg","Assets/Images/contact-icon.svg","Assets/Images/agenda-icon.svg","Assets/Images/notes-icon.svg","Assets/Images/todo-icon.svg","Assets/Images/project-icon.svg","Assets/Images/expense-icon.svg","Assets/Images/earning-icon.svg","Assets/Images/invoice-icon.svg","Assets/Images/map-icon.svg","Artihaus/Pages/Artihaus/Artihaus.js","Components/Header/Header.js","Components/SubHeader/SubHeader.js","Utils/Api/api.js","Utils/Server/Clients.js","Utils/Server/Projects.js","Utils/Server/Expenses.js","Utils/Server/Earnings.js","Utils/ContextApi/MyProvider.js","Components/GeneralFunctions/Moment.js","Components/GeneralFunctions/CapitalizeFirst.js","Components/DatePicker/DatePicker.js","Components/Buttons/SubmitNewProjectButton.js","Components/Projects/CreateProjectCard.js","Components/Buttons/Close.js","Components/Buttons/UpdateProjectButton.js","Components/Buttons/Delete.js","Components/Projects/UpdateProjectModal.js","Components/Buttons/SubmitNewExpenseButton.js","Components/Expenses/CreateExpenseModal.js","Components/Earnings/CreateEarningModal.js","Components/Buttons/OpenModalButton.js","Components/Projects/Projects.js","Components/GeneralFunctions/Status.js","Components/Buttons/UpdateExpenseButton.js","Components/Expenses/UpdateExpenseModal.js","Components/Expenses/Expenses.js","AdminPortal/Pages/ExpensesPrintOut/ExpensesPrintOut.js","Components/Earnings/Earnings.js","AdminPortal/Pages/AdminPortalDashboard/AdminPortalDashboard.js","Artihaus/Pages/_404Page/_404Page.js","routes/route.js","App.js","index.js","Assets/Images/artihaus.svg"],"names":["module","exports","Artihaus","localStorage","clear","setItem","JSON","stringify","user_id","name","user_right","Component","AdminPortalDashboardHeader","className","to","alt","src","require","SubHeader","baseUrl","ClientsApi","create","data","axios","post","read","update","remove","ProjectsApi","get","read_false","readById","ExpenseApi","read_date_range","EarningApi","console","log","readAll","read_latest","React","createContext","Provider","Consumer","MyProvider","state","project","address","address2","city_code","client_id","status","started","finished","earning","project_id","amount","category","size","details","paidAt","isUploaded","expense","subcategory","createdBy","isArtipro","isApproved","createdAt","projectToCreate","client_name","whichModalDisplay","modalKey","a","newState","then","projects","setState","clients","ExpensesApi","expenses","sort","b","updated_at","earnings","value","this","updateStateOfProjects","forEach","stateProject","_id","updateStateOfExpenses","stateExpense","removeExpenseFromExpenses","index","splice","modalDisplay","modal","updateProject","updateExpense","updateProjectValue","key","updateExpenseValue","createNewProject","createNewExpense","setStateForEarning","getClientCredentials","found_client","client","res","unshift","catch","err","getUserCredentials","parse","getItem","addNewProjectToState","addNewExpenseToState","addNewEarningToState","clearState","props","children","DateFormat","format","text","Moment","CapitalizeFirst","capitalize","split","map","s","charAt","toUpperCase","substring","join","DatePickerComponent","context","origin","onChange","e","SubmitNewProjectButton","toLowerCase","ProjectApi","window","alert","style","marginTop","height","type","onClick","handleSubmit","AddProjectCard","target","placeholder","Close","UpdateProjectButton","handleUpdate","Delete","confirm","handleDelete","EditProjectModal","close","htmlFor","SubmitNewExpenseButton","userCredentials","CreateExpenseModal","CreateEarningModal","OpenModal","img","width","Projects","isModalUpdateProjectDisplaying","isModalAddExpenseDisplaying","isModalAddEarningDisplaying","length","CreateProjectCard","handleClientId","Status","OpenModalButton","handleProjects","UpdateExpenseButton","Expenses","expensesOverviewCard","byCategoryArray","stashToResolve","stashToResolveAmount","displayExpensesBy","isStash","stash","push","categoryArray","categoryArrayObject","includes","handleDisplayByCategory","toFixed","item","handleFilterCategory","addStashButton","handleStashToResolve","ExpensesPrintOut","subcategoryArrayObject","Earnings","AdminPortalDashboard","display","pathname","history","location","menu","_404Page","MainContainer","exact","path","component","AdminPortal","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f327e49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/date-picker-icon.8e01c9fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-icon.069702be.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-icon.b0479636.svg\";","module.exports = __webpack_public_path__ + \"static/media/expense-icon-on-white.2e2b38be.svg\";","module.exports = __webpack_public_path__ + \"static/media/earning-icon-on-white.c344b732.svg\";","module.exports = __webpack_public_path__ + \"static/media/timesheet-icon-on-white.c79ea66f.svg\";","module.exports = __webpack_public_path__ + \"static/media/email-icon.66a95aa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/chat-icon.be965a99.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact-icon.96587068.svg\";","module.exports = __webpack_public_path__ + \"static/media/agenda-icon.e2678ba6.svg\";","module.exports = __webpack_public_path__ + \"static/media/notes-icon.02c33286.svg\";","module.exports = __webpack_public_path__ + \"static/media/todo-icon.e9b8c94a.svg\";","module.exports = __webpack_public_path__ + \"static/media/project-icon.865d2dd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/expense-icon.afa028f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/earning-icon.38e07795.svg\";","module.exports = __webpack_public_path__ + \"static/media/invoice-icon.e26104ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-icon.658dc7dc.svg\";","import React, { Component } from 'react'\n\nclass Artihaus extends Component{\n\n    componentDidMount(){\n        localStorage.clear('gui')\n        const gui = {\n            user_id: '5e21fa1183e005ceafe11c16',\n            name: 'tarciso loiola',\n            user_right: 'admin'\n        }\n        localStorage.setItem('gui', JSON.stringify(gui))\n    }\n\n    render(){\n        return(\n            <div>Welcome to Artihaus Dashboard!</div>\n        )\n    }\n\n}\nexport default Artihaus","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './Header.css'\n\nclass AdminPortalDashboardHeader extends Component {\n\n    render() {\n        return (\n                <div className='ap-ad-header'>\n                    <Link to=\"/admin-portal\" alt='Home Link' className='ap-ad-header--artihaus'><img src={require('../../Assets/Images/artihaus.svg')} alt='home logo'/></Link>\n\n                    <ul className='ap-ad-header--nav'>\n                        <li>\n                            <Link to=\"/admin-portal\" alt='Home Link'>Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/admin-portal/support\" alt='Home Link'>Support</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/admin-portal/about\" alt='Home Link'>About Us</Link>\n                        </li>\n                    </ul>\n                </div>\n        )\n    }\n\n}\nexport default AdminPortalDashboardHeader","import React, { Component } from 'react'\nimport './SubHeader.css'\n\n\nclass SubHeader extends Component {\n\n    render(){\n        return(\n            <div className='ap-ap-subheader'>\n                <div className='ap-ap-subheader--my-portal'>My Portal</div>\n                <div className='ap-ap-subheader--my-status'>Sub Header</div>\n            </div>\n        )\n    }\n}\n\nexport default SubHeader","// export const baseUrl = 'https://git.heroku.com/'\n// export const apiKey = 'artihausapi.git'\n\n//export const baseUrl = 'http://localhost:3001'\n\nexport const baseUrl = 'http://artihausapi.herokuapp.com'\n\nexport const apiKey = ''\n","import axios from 'axios';\nimport { baseUrl, apiKey } from '../Api/api'\n\nconst ClientsApi = {\n\n  create: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/clients/create`, data);\n  },\n\n  read: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/clients/read`, data);\n  },\n\n  update: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/clients/update`, data);\n  },\n\n  remove: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/clients/delete`, data);\n  }\n}\n\nexport default ClientsApi","import axios from 'axios';\nimport { baseUrl, apiKey } from '../Api/api'\n\nconst ProjectsApi = {\n\n  create: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/projects/create`, data);\n  },\n\n  read: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/projects/read`, data);\n  },\n\n  read_false: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/projects/read-false`, data);\n  },\n\n  readById: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/projects/read/:_id`, data);\n  },\n\n  update: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/projects/update`, data);\n  },\n\n  remove: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/projects/delete`, data);\n  }\n}\n\nexport default ProjectsApi","import axios from 'axios';\nimport { baseUrl, apiKey } from '../Api/api'\n\nconst ExpenseApi = {\n\n  create: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/create`, data);\n  },\n\n  read: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/read`, data);\n  },\n\n\n  read_date_range: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/read-date-range`, data);\n  },\n\n  read_false: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/expenses/read-false`, data);\n  },\n\n  readById: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/read/:_id`, data);\n  },\n\n  update: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/update`, data);\n  },\n\n  remove: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/expenses/delete`, data);\n  }\n}\n\nexport default ExpenseApi","import axios from 'axios';\nimport { baseUrl, apiKey } from '../Api/api'\n\nconst EarningApi = {\n\n  create: (data) => {\n    console.log(data)\n    return axios.get(`${baseUrl}${apiKey}/earnings/read`, data);\n  },\n\n  read: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/earnings/read`, data);\n  },\n\n  readAll: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/expenses/read`, data);\n  },\n\n  read_latest: (data) => {\n    return axios.get(`${baseUrl}${apiKey}/earnings/read-latest`, data);\n  },\n\n  readById: (data) => {\n    console.log(data)\n    return axios.post(`${baseUrl}${apiKey}/earnings/read/:_id`, data);\n  },\n\n  update: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/earnings/update`, data);\n  },\n\n  remove: (data) => {\n    return axios.post(`${baseUrl}${apiKey}/earnings/delete`, data);\n  }\n}\n\nexport default EarningApi","import React, { Component } from 'react'\nimport Moment from 'moment'\n\nimport ClientsApi from '../../Utils/Server/Clients'\nimport ProjectsApi from '../../Utils/Server/Projects'\nimport ExpensesApi from '../../Utils/Server/Expenses'\nimport EarningApi from '../../Utils/Server/Earnings'\n\nconst { Provider, Consumer } = React.createContext()\n\n\nclass MyProvider extends Component {\n    state = {\n        project: {\n            name: '',\n            address: '',\n            address2: '',\n            city_code: '',\n            client_id: '',\n            user_id: '',\n            status: '',\n            started: '',\n            finished: ''\n        },\n        earning: {\n            project_id: '',\n            user_id: '',\n            amount: '',\n            category: '',\n            size: '',\n            details: '',\n            status: '',\n            paidAt: '',\n            isUploaded: '',\n        },\n        expense: {\n            project_id: '',\n            category: '',\n            subcategory: '',\n            amount: '',\n            status: '',\n            createdBy: '',\n            isArtipro: '',\n            isApproved: '',\n            createdAt: '',\n            isUploaded: '',\n        },\n        projectToCreate: {\n            name: '',\n            address: '',\n            address2: '',\n            city_code: '',\n            client_name: '',\n            started: '',\n        },\n\n        whichModalDisplay: '',\n        modalKey: '',\n    }\n    componentDidMount() {\n        (async () => {\n            const newState = this.state\n            const projects = ProjectsApi\n                .read({})\n                .then(projects => {\n                    newState.projects = projects.data\n                    this.setState(newState)\n                })\n\n            const clients = ClientsApi\n                .read({})\n                .then(clients => {\n                    newState.clients = clients.data\n                    this.setState(newState)\n                })\n\n            const expenses = ExpensesApi\n                .read({})// .read_date_range({start: '2019-07-15', end: '2020-01-01'})\n                .then(expenses => {\n                    newState.expenses = expenses.data.sort((a, b) => a.updated_at - b.updated_at)\n                    this.setState(newState)\n                })\n\n            const earnings = EarningApi\n                .read({})\n                .then(earnings => {\n                    newState.earnings = earnings.data.sort((a, b) => a.updated_at - b.updated_at)\n                    this.setState(newState)\n                })\n        })()\n    }\n\n    render() {\n        return (\n            <Provider\n                value={{\n                    state: this.state,\n                    updateStateOfProjects: (project) => {\n                        const newState = this.state\n                        newState.projects.forEach(stateProject => {\n                            if (stateProject._id === project._id) {\n                                stateProject = project\n                                this.setState(newState)\n                            }\n                        })\n                    },\n\n                    updateStateOfExpenses: (expense, ) => {\n                        const newState = this.state\n                        newState.expenses.forEach(stateExpense => {\n                            if (stateExpense._id === expense._id) {\n                                stateExpense = expense\n                                this.setState(newState)\n                            }\n                        })\n                    },\n                    removeExpenseFromExpenses: _id => {\n                        const newState = this.state\n                        let index = 0\n                        newState.expenses.forEach( expense => {\n                            if (expense._id === _id) {\n                                newState.expenses.splice(index, 1)\n                            }\n                            index++\n                        })\n                        this.setState(newState)\n                    },\n\n                    modalDisplay: (modal) => {\n                        this.setState({\n                            whichModalDisplay: modal\n                        })\n                    },\n                    // modalKeyDisplay: (_id) => {\n                    //     this.setState({\n                    //         modalKey: _id\n                    //     })\n                    // },\n\n                    updateProject: project => {\n                        this.setState({ project: project })\n                    },\n\n                    updateExpense: expense => {\n                        this.setState({ expense: expense })\n                    },\n\n                    updateProjectValue: ({ name: key, value }) => {\n                        const newState = this.state\n                        if (key === 'name') newState.project.name = value\n                        if (key === 'address') newState.project.address = value\n                        if (key === 'address2') newState.project.address2 = value\n                        if (key === 'city_code') newState.project.city_code = value\n                        if (key === 'client_id') newState.project.client_id = value\n                        if (key === 'user_id') newState.project.user_id = value\n                        if (key === 'status') newState.project.status = value\n                        if (key === 'started') newState.project.started = value\n                        if (key === 'finished') newState.project.finished = value\n                        this.setState(newState)\n                    },\n\n                    updateExpenseValue: ({ name: key, value }) => {\n                        const newState = this.state\n                        if (key === 'category') newState.expense.category = value\n                        if (key === 'subcategory') newState.expense.subcategory = value\n                        if (key === 'amount') newState.expense.amount = value\n                        if (key === 'status') newState.expense.status = value\n                        if (key === 'createdBy') newState.expense.createdBy = value\n                        if (key === 'isArtipro') newState.expense.isArtipro = value\n                        if (key === 'isApproved') newState.expense.isApproved = value\n                        this.setState(newState)\n                    },\n\n                    createNewProject: ({ name: key, value }) => {\n                        const newState = this.state\n                        if (key === 'name') newState.projectToCreate.name = value\n                        if (key === 'address') newState.projectToCreate.address = value\n                        if (key === 'city_code') newState.projectToCreate.city_code = value\n                        if (key === 'client_name') newState.projectToCreate.client_name = value\n                        if (key === 'started') newState.projectToCreate.started = value\n                        this.setState(newState)\n                    },\n\n                    createNewExpense: ({ name: key, value }) => {\n                        const newState = this.state\n                        console.log(key, value)\n                        if (key === 'category') newState.expense.category = value\n                        if (key === 'subcategory') newState.expense.subcategory = value\n                        if (key === 'amount') newState.expense.amount = value\n                        if (key === 'status') newState.expense.status = value\n                        if (key === 'isArtipro') newState.expense.isArtipro = value\n                        if (key === 'isApproved') newState.expense.isApproved = value\n                        if (key === 'createdAt') newState.expense.createdAt = value\n                        this.setState(newState)\n                    },\n\n                    setStateForEarning: ({ name: key, value }) => {\n                        const newState = this.state\n                        if( key === 'project_id' ) newState.earning.project_id = value\n                        if( key === 'user_id' ) newState.earning.user_id = value\n                        if( key === 'amount' ) newState.earning.amount = value\n                        if( key === 'category' ) newState.earning.category = value\n                        if( key === 'size' ) newState.earning.size = value\n                        if( key === 'details' ) newState.earning.details = value\n                        if( key === 'status' ) newState.earning.status = value\n                        if( key === 'paidAt' ) newState.earning.paidAt = value\n                        this.setState(newState)\n                    },\n\n                    getClientCredentials: (client_name, user_id) => {\n                        const newState = this.state\n                        let client_id\n                        let found_client = false\n                        if (newState.clients) {\n                            newState.clients.forEach(client => {\n                                if (client.name === client_name) {\n                                    client_id = client._id\n                                    found_client = true\n                                }\n                            })\n                        }\n                        if (!found_client) {\n                            ClientsApi\n                                .create({\n                                    name: client_name,\n                                    user_id\n                                })\n                                .then(res => {\n                                    newState.clients.unshift(res.data)\n                                    const { _id } = res.data\n                                    client_id = _id\n                                })\n                                .catch(err => console.log(err))\n                        }\n                        return client_id\n                    },\n\n                    getUserCredentials: () => {\n                        const gui = JSON.parse(localStorage.getItem('gui'))\n                        return (gui)\n                    },\n\n                    addNewProjectToState: (project) => {\n                        const newState = this.state\n                        newState.expenses.unshift(project)\n                        this.setState(newState)\n                    },\n\n                    addNewExpenseToState: (expense) => {\n                        const newState = this.state\n                        newState.expenses.unshift(expense)\n                        this.setState(newState)\n                    },\n\n                    addNewEarningToState: (earning) => {\n                        const newState = this.state\n                        newState.earnings.unshift(earning)\n                        this.setState(newState)\n                    },\n\n                    clearState: () => {\n                        const newState = this.state\n                        newState.project.name = ''\n                        newState.project.address = ''\n                        newState.project.address2 = ''\n                        newState.project.city_code = ''\n                        newState.project.client_id = ''\n                        newState.project.user_id = '5e21fa1183e005ceafe11c16'\n                        newState.project.status = false\n                        newState.project.started = ''\n                        newState.project.finished = ''\n                        this.setState(newState)\n                    },\n\n                }} >\n                {this.props.children}\n            </Provider >\n        )\n    }\n}\n\nexport { MyProvider }\n\nexport default Consumer\n","import React from 'react'\nimport Moment from 'moment'\n\n\nexport const DateFormat = (format, text) => {\n    if(format) return Moment(format).format('ddd MMMM DD, YYYY')\n\n    return(\n        <i><small>{text}</small></i>\n    )\n}","export const CapitalizeFirst = (capitalize) => {\n    if (!capitalize) return capitalize\n\n    capitalize = capitalize\n        .split(' ')\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n        .join(' ')\n\n    return capitalize\n}","import React, { Component } from 'react'\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport { DateFormat } from '../GeneralFunctions/Moment'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nimport './DatePicker.css'\nimport { invalid } from 'moment'\n\nclass DatePickerComponent extends Component {\n\n  render() {\n    return (\n      <Consumer>\n\n        {context => {\n          return (\n            <div className='--date-picker-grid'>\n              <div className='--date-picker-date-display'>\n              {\n                this.props.origin === 'create-expense' ? DateFormat(context.state.expense.createdAt) :\n                this.props.origin === 'create-project' ? DateFormat(context.state.projectToCreate.started) :\n                <span/>\n              }\n              </div>\n              <div className='--date-picker'>\n                <img src={require('../../Assets/Images/date-picker-icon.svg')} alt='date picker' />\n                <DatePicker\n                  onChange={e => {\n                    if (this.props.origin === 'create-expense') {\n                      context.createNewExpense({ name: 'createdAt', value: e })\n                    }\n                    if (this.props.origin === 'create-project') {\n                      context.createNewProject({ name: 'started', value: e })\n                    }\n                  }} />\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default DatePickerComponent","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport ProjectApi from '../../Utils/Server/Projects'\n\nimport './Close.css'\n\nclass SubmitNewProjectButton extends Component {\n\n    handleSubmit(context) {\n        let { name, address, client_name, city_code, started } = context.state.projectToCreate\n\n        if (name) name = name.toLowerCase()\n        if (address) address = address.toLowerCase()\n\n        const { user_id } = context.getUserCredentials()\n        const client_id = context.getClientCredentials(client_name.toLowerCase(), user_id)\n        console.log('CLIENT_ID', client_id)\n\n        if (name && address && client_id && city_code && started && client_id) {\n            ProjectApi\n                .create({\n                    name,\n                    address,\n                    city_code,\n                    client_id,\n                    user_id,\n                    status: false,\n                    started\n                })\n                .then(res => {\n                    if (res) context.addNewProjectToState(res.data)\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n        else { window.alert('Create New Project By Insert New Values!') }\n    }\n\n    render() {\n        const style = {\n            marginTop: '32px',\n            height: '25px',\n        }\n        return (\n            <Consumer>\n                {(context) => {\n                    return (\n                        <div>\n                            <button style= {style} type='submit' onClick={() => this.handleSubmit(context)}>Create New Project</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default SubmitNewProjectButton","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport { DateFormat } from '../GeneralFunctions/Moment'\nimport DatePicker from '../DatePicker/DatePicker'\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\n\n// import ProjectApi from '../../Utils/Server/Projects'\nimport SubmitNewProjectButton from '../Buttons/SubmitNewProjectButton'\n\nimport './AddProjectCard.css'\n\nclass AddProjectCard extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {context => {\n                    const { projectToCreate } = context.state\n                    let { name, address, city_code, client_name, started } = projectToCreate\n\n                    return (\n                        <div className='ap-ad--grid--card'>\n                            <div>\n                                <div className='ap-ad--card-body --header'><input type=\"text\" name=\"name\" onChange={e => context.createNewProject( e.target )} value={name.toUpperCase()} placeholder='NEW PROJECT NAME'/></div>\n                                <div className='ap-ad--card-body --header' ><input type=\"text\" name=\"client_name\" onChange={e => context.createNewProject( e.target )} value={CapitalizeFirst(client_name)} placeholder='Project Client'/></div>\n                                <div className='ap-ad--card-body' ><input type=\"text\" name=\"address\" onChange={e => context.createNewProject( e.target )} value={CapitalizeFirst(address)} placeholder='Project Address'/></div>\n                                <div className='ap-ad--card-body' ><input type=\"text\" name=\"city_code\" onChange={e => context.createNewProject( e.target )} value={city_code}  placeholder='Project City Code'/></div>\n                                <div className='ap-ad--card-body' ><DatePicker origin='create-project'/></div>\n\n                                <div className='ap-ad--card--button' ><SubmitNewProjectButton /></div>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddProjectCard","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport './Close.css'\n\nclass Close extends Component {\n\n    render(){\n        return(\n            <Consumer>\n                {(context) => {\n                    return(\n                        <div className='close-button' onClick={ () =>{\n                            context.modalDisplay('close')\n                        }}>\n                            <img src={require('../../Assets/Images/close-icon.svg')} alt='close icon'/>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Close","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport ProjectApi from '../../Utils/Server/Projects'\n\nimport './Close.css'\n\nclass UpdateProjectButton extends Component {\n\n    handleUpdate( context ){\n        const { project } = context.state\n        ProjectApi\n        .update( project )\n        .then( res => {\n            context.updateStateOfProjects( project )\n            context.modalDisplay('close')\n        })\n        .catch( err => {\n            console.log(err)\n        })\n    }\n\n    render(){\n        return(\n            <Consumer>\n                {(context) => {\n                    return(\n                        <div>\n                            <button type='submit' onClick={ ()=> {\n                                this.handleUpdate( context )\n                            }}>Update This Project</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default UpdateProjectButton","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport ProjectApi from '../../Utils/Server/Projects'\nimport ExpenseApi from '../../Utils/Server/Expenses'\n\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\nimport './Close.css'\n\nclass Delete extends Component {\n\n    handleDelete(_id, context, origin) {\n        console.log(_id, origin)\n        const { projects, expenses } = context.state\n        const confirm = window.confirm(`Artihaus Will Permanently Remove This ${origin}`)\n        if (confirm) {\n            switch (origin) {\n                case 'Project': {\n                    ProjectApi\n                        .remove({\n                            _id\n                        })\n                        .then(res => {\n                            let index = 0\n                            projects.forEach(project => {\n                                if (project._id === _id) {\n                                    delete projects[index]\n                                    context.modalDisplay('close')\n                                }\n                                index++\n                            })\n                        })\n                        .catch(err => console.log(err))\n                    break;\n                }\n                case 'Expense': {\n                    ExpenseApi\n                        .remove({\n                            _id\n                        })\n                        .then(res => {\n                            context.removeExpenseFromExpenses(_id)\n                            context.modalDisplay('close')\n                            return 'done'\n                        })\n                        .catch(err => console.log(err))\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {(context) => {\n                    console.log(this.props.origin)\n                    const { project, expense } = context.state\n                    let _id\n                    if( this.props.origin === 'project' ) { _id = project._id }\n                    if( this.props.origin === 'expense' ) { _id = expense._id }\n\n                    let origin = CapitalizeFirst(this.props.origin)\n                    return (\n                        <div>\n                            <button type='submit' onClick={() => this.handleDelete(_id, context, origin)}>Delete This {origin}</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Delete","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport Close from '../Buttons/Close'\nimport { DateFormat } from '../GeneralFunctions/Moment'\nimport UpdateProjectButton from '../Buttons/UpdateProjectButton'\nimport Delete from '../Buttons/Delete'\n\nimport './UpdateProjectModal.css'\n\nclass EditProjectModal extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {context => {\n                    const { project } = context.state\n                    let { _id, name, address, city_code, client_id, user_id, status, started, finished } = project\n                    return (\n                        <div key={_id} className='update-project-container'>\n                            <div className='update-project-card'>\n                                <Close close='close-update-project-modal'/>\n                                <div className='update-project-card--header'>\n                                    UPDATE PROJECT\n                                </div>\n                                <label htmlFor=\"name\">Project Name: </label><input type=\"text\" name=\"name\" onChange={e => context.updateProjectValue( e.target )} value={name} />\n                                <label htmlFor=\"address\">Project Address: </label><input type=\"text\" name=\"address\" onChange={e => context.updateProjectValue( e.target )} value={address} />\n                                <label htmlFor=\"city_code\">Project City Code: </label><input type=\"text\" name=\"city_code\" onChange={e => context.updateProjectValue( e.target )} value={city_code}  />\n                                <label htmlFor=\"started\">Project Status: </label><input type=\"text\" name=\"status\" onChange={e => context.updateProjectValue( e.target )} value={status}  />\n                                <label htmlFor=\"started\">Project Started Date: </label><input type=\"text\" name=\"started\" onChange={e => context.updateProjectValue( e.target )} value={DateFormat(started)}  />\n                                <label htmlFor=\"finished\">Project Finished Date: </label><input type=\"text\" name=\"finished\" onChange={e => context.updateProjectValue( e.target )} value={finished} placeholder='Enter Finished Date' />\n                                <div className='--button-grid-2'>\n                                    <UpdateProjectButton  />\n                                    <Delete origin='project' />\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditProjectModal","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\n\nimport ExpenseApi from '../../Utils/Server/Expenses'\n\nimport './Close.css'\n\nclass SubmitNewExpenseButton extends Component {\n\n    handleSubmit(context) {\n        const { _id: project_id } = context.state.project\n        let { category, subcategory, amount, status, isArtipro, createdAt } = context.state.expense\n        const userCredentials = context.getUserCredentials()\n        const isApproved = userCredentials.user_right === 'admin' ? true : false\n\n        if(category && subcategory && amount && status && isArtipro && createdAt && project_id){\n            ExpenseApi\n            .create({\n                project_id,\n                createdBy: userCredentials.user_id,\n                category,\n                subcategory,\n                amount,\n                status,\n                isArtipro,\n                isApproved,\n                createdAt\n            })\n            .then( res => {\n                context.addNewExpenseToState( res.data )\n            })\n        }\n    }\n\n    render() {\n        const style = {\n            marginTop: '32px',\n            height: '25px',\n        }\n        return (\n            <Consumer>\n                {(context) => {\n                    return (\n                        <div>\n                            <button style={style} type='submit' onClick={() => this.handleSubmit(context)}>Create New Expense</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default SubmitNewExpenseButton","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport Close from '../Buttons/Close'\nimport SubmitNewExpenseButton from '../Buttons/SubmitNewExpenseButton'\nimport DatePicker from '../DatePicker/DatePicker'\n\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\n\nimport './CreateExpenseModal.css'\n\nclass CreateExpenseModal extends Component {\n\n\n    render() {\n        return (\n            <Consumer>\n                {context => {\n                    const { _id: project_id, name } = context.state.project\n                    const { category, subcategory, amount, status, isArtipro, createdAt } = context.state.expense\n                    return (\n                        <div className='create-expense-container'>\n                            <div className='create-expense-card'>\n                                <Close close='close-add-expense-modal' />\n                                <div className='create-expense-card--header'>Create Expense For {CapitalizeFirst(name)}</div>\n                                <label htmlFor=\"category\">Category: </label><input type=\"text\" name=\"category\" onChange={e => context.createNewExpense(e.target)} value={category} /><br />\n                                <label htmlFor=\"subcategory\">Subcategory: </label><input type=\"text\" name=\"subcategory\" onChange={e => context.createNewExpense(e.target)} value={subcategory} /><br />\n                                <label htmlFor=\"amount\">Amount: </label><input type=\"text\" name=\"amount\" onChange={e => context.createNewExpense(e.target)} value={amount} /><br />\n\n                                <input type=\"radio\" name=\"status\" onChange={e => context.createNewExpense(e.target)} value={true} /><label htmlFor=\"status-true\">Status Resolved</label>\n                                <input type=\"radio\" name=\"status\" onChange={e => context.createNewExpense(e.target)} value={false} /><label htmlFor=\"status-false\">Status Pending</label><br />\n\n                                <input type=\"radio\" name=\"isArtipro\" onChange={e => context.createNewExpense(e.target)} value={true} /><label htmlFor=\"isArtipro-true\">ArtiPro Expense</label>\n                                <input type=\"radio\" name=\"isArtipro\" onChange={e => context.createNewExpense(e.target)} value={false} /><label htmlFor=\"isArtipro-false\">Not Artipro Expense</label><br />\n                                <label htmlFor=\"createdAt\">CreatedAt: </label><div className='ap-ad--card-body' ><DatePicker origin='create-expense'/></div>\n                                <div className='--button-grid-1'>\n                                    <SubmitNewExpenseButton />\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default CreateExpenseModal\n\n/*\n    project_id: '',\n    category: '',\n    subcategory: '',\n    amount: '',\n    status: '',\n    createdBy: '',\n    isArtipro: '',\n    isApproved: '',\n    createdAt: '',\n    isUploaded: '',\n*/","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport Close from '../Buttons/Close'\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\n// import { DateFormat } from '../GeneralFunctions/Moment'\n// import UpdateProjectButton from '../Buttons/UpdateProjectButton'\nimport Delete from '../Buttons/Delete'\n\nimport './CreateEarningModal.css'\n\nclass CreateEarningModal extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {context => {\n                    const { name } = context.state.project\n                    return (\n                        <div className='create-earning-container'>\n                            <div className='create-earning-card'>\n                                    <div className='create-earning-card--header'>\n                                    <Close close='close-add-earning-modal'/>\n                                        Create Earning For {CapitalizeFirst(name)}\n                                    </div>\n                                <Delete origin='earning'/>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default CreateEarningModal","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\n\nimport './Close.css'\n\nclass OpenModal extends Component {\n\n    render() {\n        const style = {\n            img: {\n                height: '20px',\n                width: '20px',\n            }\n        }\n        return (\n            <Consumer>\n                {(context) => {\n                    return (\n                        <div onClick={() => {\n                            if(this.props.expense) context.updateExpense( this.props.expense )\n                            if(this.props.project) context.updateProject( this.props.project )\n                            context.modalDisplay(this.props.modal)\n                        }}>\n                            <button type='button'><img style={style.img}\n                            src={\n                                this.props.origin === 'Update' ? require('../../Assets/Images/edit-icon.svg') :\n                                this.props.origin === 'Expense' ? require('../../Assets/Images/expense-icon-on-white.svg') :\n                                this.props.origin === 'Earning' ? require('../../Assets/Images/earning-icon-on-white.svg') :\n                                this.props.origin === 'Time Sheet' ? require('../../Assets/Images/timesheet-icon-on-white.svg') :\n                                ''\n                                }\n                            alt='multi icon' />{this.props.origin.toUpperCase()}</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default OpenModal","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\n\nimport { DateFormat } from '../GeneralFunctions/Moment'\nimport { Status } from '../GeneralFunctions/Status'\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\nimport CreateProjectCard from './CreateProjectCard'\nimport UpdateProjectModal from './UpdateProjectModal'\nimport CreateExpenseModal from '../Expenses/CreateExpenseModal'\nimport CreateEarningModal from '../Earnings/CreateEarningModal'\nimport OpenModalButton from '../Buttons/OpenModalButton'\n\nimport './Projects.css'\n\nclass Projects extends Component {\n\n    handleClientId(clients, _id) {\n        let name = ''\n        clients.forEach(client => {\n            if (_id === client._id) name = client.name\n        })\n        return name\n    }\n\n    handleProjects(context) {\n        const { projects, clients, isModalUpdateProjectDisplaying, isModalAddExpenseDisplaying, isModalAddEarningDisplaying, whichModalDisplay, modalKey } = context.state\n        if (projects) {\n            return (\n                <div className='ap-ad--container'>\n                    {projects.length ?\n                        <div className='ap-ad--grid'>\n                            <CreateProjectCard />\n                            {\n                                projects.map(project => {\n                                    const { _id, name, address, city_code, client_id, status, started, finished } = project\n                                    let client_name = this.handleClientId(clients, client_id)\n                                    return (\n                                        <div key={_id} >\n                                            <div className='ap-ad--grid--card'>\n                                                <div className='ap-ad--card-body --header'>{name.toUpperCase()}</div>\n                                                <div className='ap-ad--card-body --header'>{CapitalizeFirst(client_name)}</div>\n                                                <div className='ap-ad--card-body --address'>{CapitalizeFirst(address)}</div>\n                                                <div className='ap-ad--card-body --address'>{city_code}</div>\n                                                <div className='ap-ad--card-body --address'>{DateFormat(started, 'Undergoing')}</div>\n                                                <div className='ap-ad--card-body  --dates'>{Status(status)} {DateFormat(finished, 'Undergoing')}</div>\n                                                <div className='--button-grid-4'>\n                                                    <OpenModalButton project={project} modal={`update-project${_id}`} origin='Update'/>\n                                                    <OpenModalButton project={project} modal={`create-expense${_id}`} origin='Expense'/>\n                                                    <OpenModalButton project={project} modal={`create-earning${_id}`} origin='Earning'/>\n                                                    <OpenModalButton project={project} modal={`create-timesheet${_id}`} origin='Time Sheet'/>\n                                                </div>\n                                            </div>\n                                            {whichModalDisplay === `update-project${_id}` ? <UpdateProjectModal /> : <span/>}\n                                            {whichModalDisplay === `create-earning${_id}` && <CreateEarningModal />}\n                                            {whichModalDisplay === `create-expense${_id}` && <CreateExpenseModal />}\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        :\n                        <div className='ap-ad--grid'>\n                            <CreateProjectCard />\n                        </div>\n                    }\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {(context) => this.handleProjects(context)}\n            </Consumer>\n        )\n    }\n}\n\nexport default Projects","import React from 'react'\nimport './status.css'\n\nexport const Status = ( status ) => {\n    switch (status) {\n        case false:\n            return (\n                <div className='--progress_bar'>\n                            <div className='start_progress'></div>\n                            <div className='half_1_progress'></div>\n                            <div className='half_2_progress'></div>\n                            <div className={status === true ? 'half_3_progress done' : 'half_3_progress red'}></div>\n                            <div className={status === true ? 'half_4_progress done' : 'half_4_progress red'}></div>\n                            <div className={status === true ? 'finish_progress done' : 'finish_progress red'}></div>\n                        </div>\n            )\n    }\n}","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport ExpenseApi from '../../Utils/Server/Expenses'\n\nimport './Close.css'\n\nclass UpdateExpenseButton extends Component {\n\n    handleUpdate( context ){\n        const { expense } = context.state\n        console.log(expense)\n        ExpenseApi\n        .update( expense )\n        .then( res => {\n            context.updateStateOfExpenses( expense )\n        })\n        .catch( err => {\n            console.log(err)\n        })\n    }\n\n    render(){\n        return(\n            <Consumer>\n                {(context) => {\n                    return(\n                        <div>\n                            <button type='submit' onClick={ ()=> {\n                                this.handleUpdate( context )\n                                context.modalDisplay()\n                            }}>Update This Expense</button>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default UpdateExpenseButton","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\nimport Close from '../Buttons/Close'\nimport UpdateExpenseButton from '../Buttons/UpdateExpenseButton'\nimport Delete from '../Buttons/Delete'\nimport { DateFormat } from '../GeneralFunctions/Moment'\n\nimport './UpdateExpenseModal.css'\n\n\nclass EditProjectModal extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {context => {\n                    const { expense } = context.state\n                    let { category, subcategory, amount, status, createdBy, isArtipro, isApproved } = expense\n\n                    return (\n                        <div className='update-expense-container'>\n                            <div className='update-expense-card'>\n                                <Close close='update-expense' />\n                                <div className='update-expense-card--header'>\n                                    UPDATE EXPENSE\n                                </div>\n                                <label htmlFor=\"name\">Category: </label><input type=\"text\" name=\"category\" onChange={e => context.updateExpenseValue(e.target)} value={category} /><br />\n                                <label htmlFor=\"name\">Subcategory: </label><input type=\"text\" name=\"subcategory\" onChange={e => context.updateExpenseValue(e.target)} value={subcategory} /><br />\n                                <label htmlFor=\"name\">Amount: </label><input type=\"text\" name=\"amount\" onChange={e => context.updateExpenseValue(e.target)} value={amount} /><br />\n\n                                <input type=\"radio\" name=\"status\" onChange={e => context.updateExpenseValue(e.target)} value={true} /><label htmlFor=\"true\">Status Resolved</label><br />\n\n                                <div className='--button-grid-2'>\n                                    <UpdateExpenseButton />\n                                    <Delete origin='expense' />\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditProjectModal","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\n\nimport { DateFormat } from '../GeneralFunctions/Moment'\n// import { Status } from '../GeneralFunctions/Status'\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\nimport OpenModalButton from '../Buttons/OpenModalButton'\nimport UpdateExpenseModal from './UpdateExpenseModal'\n\nimport './Expenses.css'\n\nclass Expenses extends Component {\n\n    state = {\n        expenses: [],\n        expensesOverviewCard: [],\n        byCategoryArray: [],\n        category: '',\n        stashToResolve: [],\n        stashToResolveAmount: 0,\n        displayExpensesBy: ''\n    }\n    handleStashToResolve(expense) {\n        const newState = this.state\n        let index = 0\n        let isStash = false\n        newState.stashToResolve.forEach(stash => {\n            if (stash._id === expense._id) {\n                isStash = true\n                newState.stashToResolveAmount -= expense.amount\n                newState.stashToResolve.splice(index, 1)\n            }\n            index++\n        })\n        if (!isStash) {\n            newState.stashToResolve.push(expense)\n            newState.stashToResolveAmount += expense.amount\n        }\n        this.setState(newState)\n    }\n\n    handleFilterCategory(context) {\n        const { expenses } = context.state\n        let categoryArray = []\n        let categoryArrayObject = []\n        if (expenses.length) {\n            expenses.forEach(expense => {\n                if (!categoryArray.includes(expense.category)) {\n                    categoryArray.push(expense.category)\n                }\n            })\n            categoryArray.forEach(category => {\n                let amount = 0\n                expenses.forEach(expense => {\n                    if (expense.category === category) amount += expense.amount\n                })\n                if (amount > 0) categoryArrayObject.push({ category, amount })\n            })\n        }\n        return (\n            categoryArrayObject.length ?\n                <div className={this.state.byCategoryArray.length > 0 ? '' : 'ap-ad-expense-grid'}>\n                    <div className='--category-header-grid'>\n                        <div key='stash' className={this.state.category === 'stash' ? '--category-header-wrapper-active --category-tab' : '--category-header-wrapper --category-tab'} onClick={() => this.handleDisplayByCategory('stash', this.state.stashToResolve)}>\n                            <div className='--category-tab-header'>STASH</div>\n                            <div className='--category-tab-amount'>${this.state.stashToResolveAmount.toFixed(2)}</div>\n                        </div>\n                        {\n                            categoryArrayObject.map(item => {\n                                const { category, amount } = item\n                                return (\n                                    <div key={category} className={this.state.category === category ? '--category-header-wrapper-active --category-tab' : '--category-header-wrapper --category-tab'} onClick={() => this.handleDisplayByCategory(category, expenses)}>\n                                        <div className='--category-tab-header'>{category.toUpperCase()}</div>\n                                        <div className='--category-tab-amount'>${amount.toFixed(2)}</div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                :\n                <div />\n        )\n    }\n\n    handleDisplayByCategory(category, expenses) {\n        const newState = this.state\n        newState.category = category\n        newState.byCategoryArray = []\n        if (category === 'stash') {\n            newState.byCategoryArray = newState.stashToResolve\n        }\n\n        expenses.forEach(expense => {\n            if (expense.category === category) {\n                newState.byCategoryArray.push(expense)\n            }\n        })\n        this.setState(newState)\n    }\n\n    handleExpenseFilterSelect(context) {\n        const newState = this.state\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {(context) => {\n                    const { whichModalDisplay } = context.state\n                    return (\n                        <div>\n                            <div className='ap-ad--container'>\n                                {this.state.byCategoryArray.length ?\n                                    <div className='ap-ad-expense-grid'>\n                                        { this.handleFilterCategory(context) }\n                                        {\n                                            this.state.byCategoryArray.map(expense => {\n                                                const { _id, category, subcategory, amount, createdBy, status, createdAt } = expense\n                                                let addStashButton = true\n                                                let isStash = false\n                                                this.state.stashToResolve && this.state.stashToResolve.forEach(stash => {\n                                                    if (stash._id === _id && this.state.category !== 'stash') addStashButton = false\n                                                    if (stash._id === _id) isStash = true\n                                                })\n                                                return (\n                                                    <div key={_id} className={!status ? '--status-pending ap-ad-expense-card' : 'ap-ad-expense-card'}>\n                                                        <div className='--category'>{category.toUpperCase()}</div>\n                                                        <div className='--sub-amount-grid'>\n                                                            <div className='--subcategory'>{CapitalizeFirst(subcategory)}</div>\n                                                            <div className='--amount'>${amount}</div>\n                                                        </div>\n                                                        <div className='--createdAt'>{DateFormat(createdAt)}</div>\n\n                                                        <div className='--createdBy'><small>{createdBy}</small></div>\n                                                        <div className='--button-grid-2'>\n                                                            <OpenModalButton expense={expense} modal={`update-expense${_id}`} origin='Update' />\n                                                            {\n                                                                addStashButton && <button onClick={() => this.handleStashToResolve(expense)} >{isStash ? 'DISCARD' : 'STASH'}</button>\n                                                            }\n                                                        </div>\n                                                        {whichModalDisplay === `update-expense${_id}` && <UpdateExpenseModal />}\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                    :\n                                    <div>{ this.handleFilterCategory(context) }</div>\n                                }\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Expenses\n\n/*\n*/","import React, { Component } from 'react'\n\nimport Consumer from '../../../Utils/ContextApi/MyProvider'\n\nimport { DateFormat } from '../../../Components/GeneralFunctions/Moment'\nimport { CapitalizeFirst } from '../../../Components/GeneralFunctions/CapitalizeFirst'\n\nimport './ExpensesPrintOut.css'\n\nclass ExpensesPrintOut extends Component {\n\n    state = {\n        expenses: [],\n        expensesOverviewCard: [],\n        byCategoryArray: [],\n        category: '',\n        stashToResolve: [],\n        stashToResolveAmount: 0,\n        displayExpensesBy: ''\n    }\n    handleStashToResolve(expense) {\n        const newState = this.state\n        let index = 0\n        let isStash = false\n        newState.stashToResolve.forEach(stash => {\n            if (stash._id === expense._id) {\n                isStash = true\n                newState.stashToResolveAmount -= expense.amount\n                newState.stashToResolve.splice(index, 1)\n            }\n            index++\n        })\n        if (!isStash) {\n            newState.stashToResolve.push(expense)\n            newState.stashToResolveAmount += expense.amount\n        }\n        this.setState(newState)\n    }\n\n    handleFilterCategory(context) {\n        const { expenses } = context.state\n        let categoryArray = []\n        let categoryArrayObject = []\n        let subcategoryArrayObject = []\n        if (expenses) {\n            expenses.forEach(expense => {\n                if (!categoryArray.includes(expense.category)) {\n                    categoryArray.push(expense.category)\n                }\n            })\n\n            categoryArray.forEach(category => {\n                subcategoryArrayObject.push({ category })\n                let amount = 0\n                expenses.forEach(expense => {\n                    if (expense.category === category) amount += expense.amount\n                })\n                if (amount > 0) categoryArrayObject.push({ category, amount })\n            })\n\n            let index = 0\n            subcategoryArrayObject.forEach( category => {\n                expenses.forEach( expense =>{\n                    const { subcategory } = expense\n                    if( expense.category === category.category ){\n\n                        subcategoryArrayObject.push({ subcategory })\n                    }\n                })\n                index++\n            })\n            console.log(subcategoryArrayObject)\n        }\n        return (\n            <div className=''>\n                {\n                    categoryArrayObject.map(item => {\n                        const { category, amount } = item\n                        return (\n                            <div key={category} >\n                                <div className='--category-header-wrapper --category-tab'>\n                                    <div className='--category-tab-header'>{category.toUpperCase()}</div>\n                                    <div className='--category-tab-amount'>${amount.toFixed(2)}</div>\n                                </div>\n                                {\n                                    expenses.length ?\n                                        expenses.map( expense => {\n                                            if( expense.category === category ){\n                                                return(\n                                                    <div key={expense._id} className='--category-table'>\n                                                        <div className='--inline-block'>{CapitalizeFirst(expense.subcategory)}</div>\n                                                        <div className='--inline-block'>${expense.amount}</div>\n                                                        <div className='--inline-block'>{DateFormat(expense.createdAt)}</div>\n                                                    </div>\n                                                )\n                                            }\n                                        })\n                                    :\n                                    <span />\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n\n    handleDisplayByCategory(category, expenses) {\n        const newState = this.state\n        newState.category = category\n        newState.byCategoryArray = []\n        if (category === 'stash') {\n            newState.byCategoryArray = newState.stashToResolve\n        }\n\n        expenses.forEach(expense => {\n            if (expense.category === category) {\n                newState.byCategoryArray.push(expense)\n            }\n        })\n        this.setState(newState)\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {(context) => {\n                    return (\n                        <div>\n                            {this.handleFilterCategory(context)}\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default ExpensesPrintOut\n\n/*\n\n<div className='ap-ad--container'>\n                                {this.state.byCategoryArray.length ?\n                                    <div className='ap-ad-expense-grid'>\n                                        { this.handleFilterCategory(context) }\n                                    </div>\n                                    :\n                                    <div>{ this.handleFilterCategory(context) }</div>\n                                }\n                            </div>\n\n\n{\n                                            this.state.byCategoryArray.map(expense => {\n                                                const { _id, category, subcategory, amount, status, createdAt } = expense\n                                                return (\n                                                    <div key={_id} className={!status ? '--status-pending ap-ad-expense-card' : 'ap-ad-expense-card'}>\n                                                        <div className='--category'>{category.toUpperCase()}</div>\n                                                        <div className='--sub-amount-grid'>\n                                                            <div className='--subcategory'>{CapitalizeFirst(subcategory)}</div>\n                                                            <div className='--amount'>${amount}</div>\n                                                        </div>\n                                                        <div className='--createdAt'>{DateFormat(createdAt)}</div>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n*/","import React, { Component } from 'react'\n\nimport Consumer from '../../Utils/ContextApi/MyProvider'\n\nimport { DateFormat } from '../GeneralFunctions/Moment'\n// import { Status } from '../GeneralFunctions/Status'\nimport { CapitalizeFirst } from '../GeneralFunctions/CapitalizeFirst'\nimport OpenModalButton from '../Buttons/OpenModalButton'\n\nimport './Earnings.css'\n\nclass Earnings extends Component {\n\n    state = {}\n\n    render() {\n        return (\n            <Consumer>\n                {(context) => {\n                    const { whichModalDisplay } = context.state\n                    console.log(context.state.earnings)\n                    return (\n                        <div>\n                            <div className='ap-ad--container'>\n                                Earnings\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Earnings\n\n/*\n\n*/","import React, { Component } from 'react'\n\nimport AdminPortalDashboardHeader from '../../../Components/Header/Header'\nimport AdminPortalDashboardSubHeader from '../../../Components/SubHeader/SubHeader'\n\nimport { MyProvider } from '../../../Utils/ContextApi/MyProvider'\n\nimport './AdminPortalDashboard.css'\n\nimport Projects from '../../../Components/Projects/Projects'\nimport Expenses from '../../../Components/Expenses/Expenses'\nimport ExpensesPrintOut from '../ExpensesPrintOut/ExpensesPrintOut'\nimport Earnings from '../../../Components/Earnings/Earnings'\n\n\nclass AdminPortalDashboard extends Component {\n\n    state = {\n        display: ''\n    }\n    componentDidMount() {\n        // this.setState({ display: 'Expenses' })\n    }\n\n    render() {\n        const { pathname } = this.props.history.location\n        return (\n            <MyProvider>\n                <AdminPortalDashboardHeader />\n                {\n                    pathname !== '/admin-portal/expenses-printout' ?\n                    <span>\n                    <AdminPortalDashboardSubHeader />\n                    <div className='ap-ad-admin-portal'>\n                        <div className='ap-ap-dashboard' >\n                            <div className='ap-ap-dashboardsidenav'>\n                                <ul>\n                                    <li onClick={() => { this.setState({ display: 'Email' }) }}><img src={require('../../../Assets/Images/email-icon.svg')} alt='email link icon' />Email</li>\n                                    <li onClick={() => { this.setState({ display: 'Chat' }) }}><img src={require('../../../Assets/Images/chat-icon.svg')} alt='chat link icon' />Chat</li>\n                                    <li onClick={() => { this.setState({ display: 'Contacts' }) }}><img src={require('../../../Assets/Images/contact-icon.svg')} alt='contact link icon' />Contacts</li>\n                                    <li onClick={() => { this.setState({ display: 'Agenda' }) }}><img src={require('../../../Assets/Images/agenda-icon.svg')} alt='agenda link icon' />Agenda</li>\n                                    <li onClick={() => { this.setState({ display: 'Notes' }) }}><img src={require('../../../Assets/Images/notes-icon.svg')} alt='notes link icon' />Notes</li>\n                                    <li onClick={() => { this.setState({ display: 'ToDos' }) }}><img src={require('../../../Assets/Images/todo-icon.svg')} alt='to do link icon' />ToDos</li>\n                                    <li onClick={() => { this.setState({ display: 'Projects' }) }}><img src={require('../../../Assets/Images/project-icon.svg')} alt='project link icon' onClick={() => { this.setState({ menu: 'projects' }) }} />Projects</li>\n                                    <li onClick={() => { this.setState({ display: 'Expenses' }) }}><img src={require('../../../Assets/Images/expense-icon.svg')} alt='expense link icon' />Expenses</li>\n                                    <li onClick={() => { this.setState({ display: 'Earnings' }) }}><img src={require('../../../Assets/Images/earning-icon.svg')} alt='earning link icon' />Earnings</li>\n                                    <li onClick={() => { this.setState({ display: 'Invoice' }) }}><img src={require('../../../Assets/Images/invoice-icon.svg')} alt='invoice link icon' />Invoice</li>\n                                    <li onClick={() => { this.setState({ display: 'Maps' }) }}><img src={require('../../../Assets/Images/map-icon.svg')} alt='map link icon' /> Maps</li>\n                                </ul>\n                            </div>\n                        </div>\n                        {\n                            this.state.display === 'Projects' ? <Projects /> :\n                                this.state.display === 'Expenses' ? <Expenses /> :\n                                    this.state.display === 'Earnings' ? <Earnings /> :\n                                        <span />\n                        }\n                    </div>\n                    </span>\n                    :\n                    <span/>\n\n                }\n                { pathname === '/admin-portal/expenses-printout' ? <ExpensesPrintOut /> : <span />}\n            </MyProvider >\n        )\n    }\n\n}\nexport default AdminPortalDashboard","import React, { Component } from 'react'\n\nclass _404Page extends Component {\n\n    render(){\n        return(\n            <div>404 Page!</div>\n        )\n    }\n}\n\nexport default _404Page","/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { Component } from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\n\nimport Artihaus from '../Artihaus/Pages/Artihaus/Artihaus'\nimport AdminPortal from '../AdminPortal/Pages/AdminPortalDashboard/AdminPortalDashboard'\nimport _404Page from '../Artihaus/Pages/_404Page/_404Page'\n\nimport './routes.css'\n// import AdminPortalExpenses from '../Artihaus/Administrator/pages/expenses/expenses_page'\n\nclass MainContainer extends Component {\n    // getNavBAr(window){\n    //     const {pathname} = window.location\n\n    //     if(pathname.includes('/admin')) return ( <AdminNotificationBar/> )\n    //     else if(pathname.includes('/renovations')) return ( <RenovationsNotificationBar/> )\n    //     else if(pathname.includes('/hardscapes')) return ( <HardscapesNotificationBar/> )\n    // <Route exact path='/admin_portal/expenses' component={AdminPortalExpenses} />\n\n    // }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className='ap-container'>\n                    <Switch>\n                        <Route exact path='/' component={Artihaus} />\n                        <Route path='/admin-portal' component={AdminPortal} />\n                        <Route component={_404Page}/>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default MainContainer","import React from 'react';\nimport Route from './routes/route'\n\nfunction App() {\n  return (\n    <div>\n      <Route />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Style/globalStyle.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/artihaus.35ee75de.svg\";"],"sourceRoot":""}